{"version":3,"file":"analects.js","mappings":"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","sources":["webpack://AnalectsSDK/webpack/universalModuleDefinition","webpack://AnalectsSDK/./src/index.js","webpack://AnalectsSDK/webpack/bootstrap","webpack://AnalectsSDK/webpack/runtime/harmony module decorator","webpack://AnalectsSDK/webpack/before-startup","webpack://AnalectsSDK/webpack/startup","webpack://AnalectsSDK/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AnalectsSDK\"] = factory();\n\telse\n\t\troot[\"AnalectsSDK\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","// 引入样式文件\nimport './styles/analects.css';\n\n// 论语 SDK - 优化清理版\nclass AnalectsSDK {\n  constructor(config = {}) {\n    this.supabaseUrl = config.supabaseUrl || 'https://your-project.supabase.co';\n    this.supabaseKey = config.supabaseKey || 'your-anon-key';\n    this.apiBaseUrl = `${this.supabaseUrl}/rest/v1`;\n    this.headers = {\n      'apikey': this.supabaseKey,\n      'Authorization': `Bearer ${this.supabaseKey}`,\n      'Content-Type': 'application/json',\n      'Prefer': 'return=representation'\n    };\n    \n    // 缓存数据\n    this.cache = {\n      characters: null,\n      arguments: null,\n      proverbs: null,\n      chapters: null\n    };\n\n    // 选中项目管理\n    this.selectedItems = {\n      characters: new Map(),\n      arguments: new Map(),\n      proverbs: new Map(),\n      chapter: { id: 'all', name: '全部章节' }\n    };\n\n    // 分页参数\n    this.pagination = {\n      pageSize: 10,\n      currentPage: 0,\n      totalLoaded: 0,\n      isLoading: false,\n      hasMore: true,\n      totalCount: 0,\n      loadedIds: new Set()\n    };\n\n    // 搜索状态管理\n    this.currentFilters = {};\n    this.isSearchInitialized = false;\n    this.scrollListener = null;\n    this.isAutoLoadingEnabled = false;\n    this.searchConditionsChanged = false;\n  }\n\n  // 验证配置\n  validateConfig() {\n    if (!this.supabaseUrl || this.supabaseUrl.includes('your-project')) {\n      throw new Error('请先配置正确的 Supabase URL');\n    }\n    if (!this.supabaseKey || this.supabaseKey.includes('your-anon-key')) {\n      throw new Error('请先配置正确的 Supabase Key');\n    }\n  }\n\n  // API请求方法\n  async apiRequest(endpoint, params = {}) {\n    this.validateConfig();\n  \n    const { count, ...urlParams } = params;\n  \n    let url = `${this.apiBaseUrl}/${endpoint}`;\n    if (Object.keys(urlParams).length > 0) {\n      url += '?' + new URLSearchParams(urlParams).toString();\n    }\n\n    const headers = { ...this.headers };\n  \n    if (count) {\n      const existingPrefer = headers['Prefer'] || '';\n      headers['Prefer'] = existingPrefer \n        ? `${existingPrefer}, count=${count}` \n        : `count=${count}`;\n    }\n\n    const response = await fetch(url, {\n      method: 'GET',\n      headers,\n      mode: 'cors',\n    });\n  \n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API错误详情:', response.status, response.statusText, errorText);\n      throw new Error(`API请求失败: ${response.status} ${response.statusText}`);\n    }\n  \n    const data = await response.json();\n  \n    if (count) {\n      const contentRange = response.headers.get('Content-Range');\n      if (contentRange) {\n        const match = contentRange.match(/\\/(\\d+)$/);\n        if (match) {\n          data.count = parseInt(match[1], 10);\n        }\n      }\n    }\n  \n    return data;\n  }\n\n  // 分页数据获取\n  async fetchAnalects(filters = {}, page = 0, pageSize = 10) {\n    try {\n      const params = this.buildQueryParams(filters, page, pageSize);\n      let data = await this.apiRequest('analects_entries_expanded', params);\n\n      const uniqueData = this.removeDuplicates(data);\n\n      if (page === 0) {\n        this.pagination.totalCount = await this.getTotalCount(filters);\n      }\n\n      const totalLoadedSoFar = page * pageSize + uniqueData.length;\n      const hasMore = totalLoadedSoFar < this.pagination.totalCount;\n\n      return {\n        data: uniqueData,\n        hasMore,\n        total: uniqueData.length,\n        totalCount: this.pagination.totalCount\n      };\n    } catch (error) {\n      console.error('获取论语数据失败:', error);\n      throw error;\n    }\n  }\n\n  // 构建查询参数\n  buildQueryParams(filters, page, pageSize) {\n    const params = {\n      select: `*,entry_characters(character_id,characters(id,name)),entry_arguments(argument_id,arguments(id,title)),entry_proverbs(proverbs(*))`,\n      order: 'id.asc',\n      limit: pageSize,\n      offset: page * pageSize\n    };\n\n    if (filters.chapter && filters.chapter !== 'all' && filters.chapter.trim()) {\n      params.chapter = `eq.${filters.chapter.trim()}`;\n    }\n\n    if (filters.characterIds && filters.characterIds.length > 0) {\n      params.character_ids = `cs.{${filters.characterIds.join(',')}}`;\n    }\n\n    if (filters.argumentIds && filters.argumentIds.length > 0) {\n      params.argument_ids = `cs.{${filters.argumentIds.join(',')}}`;\n    }\n\n    if (filters.proverbIds && filters.proverbIds.length > 0) {\n      params.proverb_ids = `cs.{${filters.proverbIds.join(',')}}`;\n    }\n\n    // 关键字处理 - 多关键字 AND 逻辑\n    if (filters.keyword && filters.keyword.trim()) {\n      const rawKeyword = filters.keyword.trim().replace(/%/g, '');\n      const keywords = rawKeyword.split(/\\s+/).filter(k => k.length > 0);\n\n      if (keywords.length > 0) {\n        const keywordGroups = keywords.map(kw => {\n          const searchFields = [\n            `original_text.ilike.*${kw}*`,\n            `translation.ilike.*${kw}*`,\n            `annotation.ilike.*${kw}*`,\n            `personal_insight.ilike.*${kw}*`\n          ];\n          return `or(${searchFields.join(',')})`;\n        });\n\n        params.and = `(${keywordGroups.join(',')})`;\n      }\n    }\n\n    return params;\n  }\n\n  // 关键字高亮处理\n  highlightKeywords(text, keyword) {\n    if (!text || !keyword) {\n      return this.escapeHtml(text || '');\n    }\n\n    let escapedText = this.escapeHtml(text);\n  \n    const keywords = keyword.trim().split(/\\s+/).filter(k => k.length > 0);\n  \n    if (keywords.length === 0) {\n      return escapedText;\n    }\n\n    keywords.forEach(kw => {\n      if (kw.length > 0) {\n        const escapedKeyword = this.escapeHtml(kw);\n        const regex = new RegExp(`(${this.escapeRegExp(escapedKeyword)})`, 'gi');\n        escapedText = escapedText.replace(regex, '<mark class=\"keyword-highlight\">$1</mark>');\n      }\n    });\n\n    return escapedText;\n  }\n\n  // HTML转义\n  escapeHtml(text) {\n    if (!text) return '';\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  }\n\n  // 正则表达式特殊字符转义\n  escapeRegExp(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n  }\n\n  // 去重处理\n  removeDuplicates(data) {\n    const uniqueData = [];\n    const seenIds = new Set();\n    \n    for (const entry of data) {\n      if (entry.id && !seenIds.has(entry.id)) {\n        seenIds.add(entry.id);\n        uniqueData.push(entry);\n      }\n    }\n    \n    return uniqueData;\n  }\n\n  // 获取总数\n  async getTotalCount(filters) {\n    try {\n      const params = {\n        select: 'id',\n        count: 'exact',\n        limit: 0\n      };\n\n      if (filters.chapter && filters.chapter !== 'all' && filters.chapter.trim()) {\n        params.chapter = `eq.${filters.chapter.trim()}`;\n      }\n\n      if (filters.characterIds && filters.characterIds.length > 0) {\n        params.character_ids = `cs.{${filters.characterIds.join(',')}}`;\n      }\n\n      if (filters.argumentIds && filters.argumentIds.length > 0) {\n        params.argument_ids = `cs.{${filters.argumentIds.join(',')}}`;\n      }\n\n      if (filters.proverbIds && filters.proverbIds.length > 0) {\n        params.proverb_ids = `cs.{${filters.proverbIds.join(',')}}`;\n      }\n\n      if (filters.keyword && filters.keyword.trim()) {\n        const rawKeyword = filters.keyword.trim().replace(/%/g, '');\n        const keywords = rawKeyword.split(/\\s+/).filter(k => k.length > 0);\n\n        if (keywords.length > 0) {\n          const keywordGroups = keywords.map(kw => {\n            const searchFields = [\n              `original_text.ilike.*${kw}*`,\n              `translation.ilike.*${kw}*`,\n              `annotation.ilike.*${kw}*`,\n              `personal_insight.ilike.*${kw}*`\n            ];\n            return `or(${searchFields.join(',')})`;\n          });\n\n          params.and = `(${keywordGroups.join(',')})`;\n        }\n      }\n\n      const result = await this.apiRequest('analects_entries_expanded', params);\n      return result.count || 0;\n    } catch (error) {\n      console.error('获取总数失败:', error);\n      return 0;\n    }\n  }\n\n  // 中文拼音排序\n  sortByPinyin(items, field) {\n    return items.sort((a, b) => {\n      const textA = a[field] || '';\n      const textB = b[field] || '';\n      return textA.localeCompare(textB, 'zh-CN', {\n        numeric: true,\n        sensitivity: 'base'\n      });\n    });\n  }\n  \n  // 章节排序\n  sortChaptersByNumber(chapters) {\n    return chapters.sort((a, b) => {\n      const getChapterNumber = (chapterName) => {\n        const match = chapterName.match(/第([一二三四五六七八九十百千万]+|[0-9]+)/);\n        if (!match) return 0;\n        const numStr = match[1];\n        if (/^\\d+$/.test(numStr)) {\n          return parseInt(numStr, 10);\n        }\n        return this.chineseToNumber(numStr);\n      };\n      return getChapterNumber(a.name || a) - getChapterNumber(b.name || b);\n    });\n  }\n\n  // 中文数字转阿拉伯数字\n  chineseToNumber(chineseNum) {\n    const chineseNumbers = {\n      '零': 0, '一': 1, '二': 2, '三': 3, '四': 4, '五': 5,\n      '六': 6, '七': 7, '八': 8, '九': 9, '十': 10,\n      '百': 100, '千': 1000, '万': 10000\n    };\n  \n    if (chineseNumbers[chineseNum]) {\n      return chineseNumbers[chineseNum];\n    }\n  \n    let result = 0;\n    let temp = 0;\n  \n    if (chineseNum.startsWith('十')) {\n      result = 10;\n      chineseNum = chineseNum.substring(1);\n    }\n  \n    for (let i = 0; i < chineseNum.length; i++) {\n      const char = chineseNum[i];\n      const num = chineseNumbers[char];\n    \n      if (num < 10) {\n        temp = num;\n      } else if (num === 10) {\n        if (temp === 0) temp = 1;\n        result += temp * 10;\n        temp = 0;\n      } else if (num === 100) {\n        if (temp === 0) temp = 1;\n        result += temp * 100;\n        temp = 0;\n      } else if (num === 1000) {\n        if (temp === 0) temp = 1;\n        result += temp * 1000;\n        temp = 0;\n      } else if (num === 10000) {\n        if (temp === 0) temp = 1;\n        result = (result + temp) * 10000;\n        temp = 0;\n      }\n    }\n  \n    result += temp;\n    return result;\n  }\n\n  // 获取数据\n  async getData(type) {\n    if (this.cache[type]) {\n      return this.cache[type];\n    }\n\n    const endpoints = {\n      characters: 'characters?order=name.asc',\n      arguments: 'arguments?order=title.asc',\n      proverbs: 'proverbs?order=content.asc',\n      chapters: 'analects_entries?select=chapter&order=chapter.asc'\n    };\n\n    try {\n      let data = await this.apiRequest(endpoints[type].split('?')[0], \n        Object.fromEntries(new URLSearchParams(endpoints[type].split('?')[1] || '')));\n    \n      if (type === 'chapters') {\n        const uniqueChapters = [...new Set(data.map(item => item.chapter))]\n          .filter(chapter => chapter && typeof chapter === 'string' && chapter.trim())\n          .map(chapter => ({ id: chapter, name: chapter }));\n        data = this.sortChaptersByNumber(uniqueChapters);\n      } else {\n        const sortField = type === 'characters' ? 'name' : \n                         type === 'arguments' ? 'title' : \n                         type === 'proverbs' ? 'content' : null;\n        if (sortField) {\n          data = this.sortByPinyin(data, sortField);\n        }\n      }\n\n      this.cache[type] = data;\n      return data;\n    } catch (error) {\n      console.error(`获取${type}列表失败:`, error);\n      if (error.message === 'Failed to fetch') {\n        throw new Error('网络连接失败，请检查 Supabase 配置和网络连接');\n      }\n      throw error;\n    }\n  }\n\n  // 便捷方法\n  async getCharacters() { return this.getData('characters'); }\n  async getArguments() { return this.getData('arguments'); }\n  async getProverbs() { return this.getData('proverbs'); }\n  async getChapters() { return this.getData('chapters'); }\n\n  // 获取每日论语\n  async getDailyAnalect() {\n    try {\n      const data = await this.apiRequest('analects_entries_expanded', {\n        select: 'chapter,section_number,original_text,translation',\n        'show_in_daily': 'eq.true'\n      });\n\n      if (data.length === 0) return null;\n      const randomIndex = Math.floor(Math.random() * data.length);\n      return data[randomIndex];\n    } catch (error) {\n      console.error('获取每日论语失败:', error);\n      throw error;\n    }\n  }\n\n  // 高级搜索\n  async advancedSearch(filters = {}) {\n    const result = await this.fetchAnalects(filters, 0, 1000);\n    return result.data;\n  }\n\n  // 格式化日期\n  formatDate(date = new Date()) {\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    const weekdays = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'];\n    const weekday = weekdays[date.getDay()];\n    \n    return {\n      full: `${year}年${month}月${day}日`,\n      weekday: weekday,\n      iso: date.toISOString().split('T')[0]\n    };\n  }\n\n  // 生成分享链接\n  generateShareLinks(entry, currentUrl = window.location.href) {\n    const text = `每日论语：${entry.original_text}`;\n    const url = currentUrl;\n    \n    return {\n      twitter: `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}&url=${encodeURIComponent(url)}`,\n      facebook: `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`,\n      copy: text + ' - ' + url,\n      email: `mailto:?subject=${encodeURIComponent('每日论语分享')}&body=${encodeURIComponent(text + ' - ' + url)}`\n    };\n  }\n\n  // 复制到剪贴板\n  async copyToClipboard(text) {\n    try {\n      if (navigator.clipboard) {\n        await navigator.clipboard.writeText(text);\n        return true;\n      } else {\n        const textArea = document.createElement('textarea');\n        textArea.value = text;\n        Object.assign(textArea.style, {\n          position: 'fixed',\n          left: '-999999px',\n          top: '-999999px'\n        });\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        const successful = document.execCommand('copy');\n        document.body.removeChild(textArea);\n        return successful;\n      }\n    } catch (err) {\n      console.error('复制失败:', err);\n      return false;\n    }\n  }\n\n  // 渲染论语卡片\n  renderAnalectCard(entry, container) {\n    if (!container) {\n      console.error('未找到容器元素');\n      return;\n    }\n\n    const card = document.createElement('div');\n    card.className = 'analects-result-card';\n    card.innerHTML = this.generateResultCardHTML(entry);\n    \n    container.appendChild(card);\n    \n    setTimeout(() => card.classList.add('animate-in'), 10);\n  }\n\n  // 生成结果卡片HTML\n  generateResultCardHTML(entry) {\n    const currentKeyword = this.currentFilters?.keyword || '';\n  \n    const getRelatedData = (items, field) => \n      (items || []).map(item => item[field]?.name || item[field]?.title || item[field]?.content).filter(Boolean);\n  \n    const characters = getRelatedData(entry.entry_characters, 'characters');\n    const argumentsList = getRelatedData(entry.entry_arguments, 'arguments');\n    const proverbs = getRelatedData(entry.entry_proverbs, 'proverbs');\n\n    const createTagGroup = (label, items, className) => \n      items.length > 0 ? `\n        <div class=\"analects-result-tag-group\">\n          <span class=\"analects-result-tag-label\">${label}:</span>\n          ${items.map(item => `<span class=\"analects-result-tag ${className}\">${this.escapeHtml(item)}</span>`).join('')}\n        </div>\n      ` : '';\n\n    const highlightedOriginal = this.highlightKeywords(entry.original_text, currentKeyword);\n    const highlightedTranslation = entry.translation ? this.highlightKeywords(entry.translation, currentKeyword) : '';\n    const highlightedAnnotation = entry.annotation ? this.highlightKeywords(entry.annotation, currentKeyword) : '';\n\n    return `\n      <div class=\"analects-result-header\">\n        <span class=\"analects-result-chapter\">${this.escapeHtml(entry.chapter || '')}</span>\n        <span class=\"analects-result-section\">第${this.escapeHtml(entry.section_number || '')}节</span>\n      </div>\n    \n      <div class=\"analects-result-content\">\n        <div class=\"analects-result-original\">${highlightedOriginal}</div>\n        ${highlightedTranslation ? `<div class=\"analects-result-translation\">${highlightedTranslation}</div>` : ''}\n        ${highlightedAnnotation ? `<div class=\"analects-result-annotation\">${highlightedAnnotation}</div>` : ''}\n      </div>\n\n      <div class=\"analects-result-tags\">\n        ${createTagGroup('人物', characters, 'character')}\n        ${createTagGroup('论点', argumentsList, 'argument')}\n        ${createTagGroup('谚语', proverbs, 'proverb')}\n      </div>\n    `;\n  }\n  \n  // 渲染搜索界面\n  renderSearchInterface(container) {\n    if (!container) {\n      console.error('未找到容器元素');\n      return;\n    }\n\n    container.innerHTML = this.getSearchInterfaceHTML();\n    this.initializeSearchEvents();\n    this.loadSearchOptions();\n    this.initializeScrollFeatures();\n    this.isSearchInitialized = true;\n  }\n\n  // 获取搜索界面HTML\n  getSearchInterfaceHTML() {\n    return `\n      <div class=\"analects-search\">\n        <div class=\"analects-search-header\">\n          <h1 class=\"analects-search-title\">论语搜索</h1>\n          <p class=\"analects-search-subtitle\">Search in the Analects of Confucius</p>\n        </div>\n\n        <div class=\"analects-search-form\">\n          <div class=\"analects-keyword-section\">\n            <label class=\"analects-keyword-label\" for=\"analects-keyword\">🔍 关键词搜索</label>\n            <input type=\"text\" id=\"analects-keyword\" class=\"analects-input\" \n                   placeholder=\"输入关键词搜索论语原文、翻译或注释... 按回车或点击开始搜索\">\n            \n            <div class=\"analects-selected-items\" id=\"selected-items-container\" style=\"display: none;\">\n              <h4>已选择的搜索条件</h4>\n              <div class=\"analects-selected-tags\" id=\"selected-tags-container\">\n                <div class=\"analects-selected-empty\">暂无选择的搜索条件</div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"analects-advanced-filters\">\n            <h3 class=\"analects-advanced-title\">高级搜索</h3>\n            \n            ${this.createSearchSection('chapter', '章节', 'single-column')}\n            \n            <div class=\"analects-filters-grid\">\n              ${this.createSearchSection('character', '人物')}\n              ${this.createSearchSection('argument', '论点')}\n            </div>\n\n            <div class=\"analects-filters-grid\" style=\"margin-top: 24px;\">\n              ${this.createSearchSection('proverb', '谚语', 'full-width')}\n            </div>\n          </div>\n\n          <div class=\"analects-search-actions\">\n            <button id=\"analects-search-btn\" class=\"analects-btn\">🔍 开始搜索</button>\n            <button id=\"analects-reset-btn\" class=\"analects-btn analects-btn-clear\">🔄 重置搜索</button>\n          </div>\n        </div>\n        \n        <div id=\"analects-search-status\" class=\"analects-search-status\"></div>\n\n        <div class=\"analects-results\">\n          <div id=\"analects-results-container\" class=\"analects-results-container\"></div>\n          <div id=\"analects-loading-more\" style=\"display:none; text-align:center; margin:10px; color:#666;\">\n            加载中...\n          </div>\n          <div id=\"analects-load-complete\" style=\"display:none; text-align:center; margin:20px; color:#888;\">\n            —— ✨ 已全部显示完毕 ✨ ——\n          </div>\n        </div>\n\n        <div id=\"scroll-to-top\" class=\"analects-scroll-indicator\">↑</div>\n      </div>\n    `;\n  }\n\n  // 创建搜索区域HTML\n  createSearchSection(type, title, className = '') {\n    const types = {\n      chapter: 'chapters',\n      character: 'characters', \n      argument: 'arguments',\n      proverb: 'proverbs'\n    };\n    \n    const containerClass = className === 'single-column' ? 'analects-filters-grid single-column' : \n                          className === 'full-width' ? 'analects-filter-section' : \n                          'analects-filter-section';\n    const wrapperStyle = className === 'full-width' ? 'style=\"grid-column: 1 / -1;\"' : '';\n\n    return `\n      <div class=\"${containerClass}\" ${wrapperStyle}>\n        <div class=\"analects-filter-section\">\n          <div class=\"analects-filter-header\">\n            <h4 class=\"analects-filter-title ${types[type]}\">${title}</h4>\n            <span class=\"analects-filter-count\" id=\"${type}-count\">0</span>\n          </div>\n          <div class=\"analects-filter-search\">\n            <input type=\"text\" id=\"${type}-search\" placeholder=\"搜索${title.replace('搜索', '')}...\">\n          </div>\n          <div id=\"${type}-filters\" class=\"analects-filter-options\">\n            <div class=\"analects-loading\">加载中...</div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  // 渲染每日论语组件\n  renderDailyAnalect(container) {\n    if (!container) {\n      console.error('未找到容器元素');\n      return;\n    }\n\n    container.innerHTML = '<div class=\"analects-loading\">加载每日论语...</div>';\n\n    this.getDailyAnalect().then(entry => {\n      if (!entry) {\n        container.innerHTML = '<div class=\"analects-daily-empty\">暂无每日论语</div>';\n        return;\n      }\n\n      const dateInfo = this.formatDate();\n      const shareLinks = this.generateShareLinks(entry);\n\n      container.innerHTML = this.getDailyAnalectHTML(entry, dateInfo, shareLinks);\n    }).catch(error => {\n      console.error('渲染每日论语失败:', error);\n      container.innerHTML = '<div class=\"analects-daily-error\">加载每日论语失败，请检查配置</div>';\n    });\n  }\n\n  // 获取每日论语HTML\n  getDailyAnalectHTML(entry, dateInfo, shareLinks) {\n    return `\n      <div class=\"analects-daily\">\n        <div class=\"analects-daily-header\">\n          <h1 class=\"analects-daily-title\">每日论语</h1>\n          <p class=\"analects-daily-subtitle\">Daily Analects of Confucius</p>\n          <div class=\"analects-daily-date\">${dateInfo.full} · ${dateInfo.weekday}</div>\n        </div>\n\n        <div class=\"analects-daily-card\">\n          <div class=\"analects-daily-original\">${entry.original_text}</div>\n          ${entry.translation ? `<div class=\"analects-daily-translation\">${entry.translation}</div>` : ''}\n          <div class=\"analects-daily-reference\">${entry.chapter} · 第${entry.section_number || ''}节</div>\n        </div>\n\n        <div class=\"analects-daily-share\">\n          <span class=\"analects-daily-share-label\">分享：</span>\n          <div class=\"analects-share-buttons\">\n            ${this.createShareButton('twitter', shareLinks.twitter, '分享到 Twitter')}\n            ${this.createShareButton('facebook', shareLinks.facebook, '分享到 Facebook', true)}\n            ${this.createShareButton('copy', null, '复制分享内容', false, shareLinks.copy)}\n            ${this.createShareButton('email', shareLinks.email, '通过邮件分享')}\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  // 创建分享按钮\n  createShareButton(type, href, title, popup = false, copyText = null) {\n    const icons = {\n      twitter: '<path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"/>',\n      facebook: '<path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"/>',\n      copy: '<path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"/>',\n      email: '<path d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"/>'\n    };\n\n    if (type === 'copy') {\n      return `\n        <button class=\"analects-share-btn copy\" \n                onclick=\"window.AnalectsSDK.copyText('${copyText.replace(/'/g, \"\\\\'\")}', this)\"\n                title=\"${title}\">\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">${icons[type]}</svg>\n        </button>\n      `;\n    }\n\n    const popupHandler = popup ? `onclick=\"return window.open(this.href, '${type}-share', 'width=626,height=436,toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes')\"` : '';\n\n    return `\n      <a href=\"${href}\" class=\"analects-share-btn ${type}\" target=\"_blank\" rel=\"noopener noreferrer\" \n         ${popupHandler} title=\"${title}\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">${icons[type]}</svg>\n      </a>\n    `;\n  }\n\n  // 初始化搜索事件\n  initializeSearchEvents() {\n    const eventMap = {\n      'analects-search-btn': () => this.performSearch(),\n      'analects-reset-btn': () => this.resetSearch()\n    };\n\n    Object.entries(eventMap).forEach(([id, handler]) => {\n      const element = document.getElementById(id);\n      if (element) element.addEventListener('click', handler);\n    });\n\n    // 回车键搜索\n    const keywordInput = document.getElementById('analects-keyword');\n    if (keywordInput) {\n      keywordInput.addEventListener('keypress', (e) => {\n        if (e.key === 'Enter') this.performSearch();\n      });\n      \n      keywordInput.addEventListener('input', () => {\n        this.markSearchConditionsChanged();\n      });\n    }\n\n    // 实时搜索过滤器\n    ['character', 'argument', 'proverb', 'chapter'].forEach(type => {\n      const searchInput = document.getElementById(`${type}-search`);\n      if (searchInput) {\n        searchInput.addEventListener('input', (e) => {\n          this.filterOptions(type, e.target.value);\n        });\n      }\n    });\n  }\n\n  // 标记搜索条件已改变\n  markSearchConditionsChanged() {\n    this.searchConditionsChanged = true;\n    const searchBtn = document.getElementById('analects-search-btn');\n    if (searchBtn && this.searchConditionsChanged) {\n      searchBtn.classList.add('search-changed');\n    }\n  }\n\n  // 初始化滚动功能\n  initializeScrollFeatures() {\n    const scrollToTopBtn = document.getElementById('scroll-to-top');\n    \n    if (scrollToTopBtn) {\n      scrollToTopBtn.addEventListener('click', () => {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      });\n\n      window.addEventListener('scroll', () => {\n        scrollToTopBtn.classList.toggle('visible', window.scrollY > 300);\n      });\n    }\n\n    this.setupAutoLoad();\n  }\n\n  // 设置自动加载功能\n  setupAutoLoad() {\n      // 如果之前存在监听器，先从 window 移除\n      if (this.scrollListener) {\n          window.removeEventListener('scroll', this.scrollListener);\n      }\n\n      this.scrollListener = () => {\n          // 检查是否应该加载\n          if (!this.isAutoLoadingEnabled || \n              this.pagination.isLoading || \n              !this.pagination.hasMore ||\n              this.pagination.totalLoaded === 0) {\n              return;\n          }\n\n          // 获取结果容器元素\n          const resultsContainer = document.getElementById('analects-results-container');\n          if (!resultsContainer) {\n              return; // 如果容器不存在，则不执行任何操作\n          }\n\n          // 关键修改：检查 resultsContainer 元素的位置\n          const rect = resultsContainer.getBoundingClientRect();\n        \n          // 当结果容器的底部进入视口，并且距离视口底部小于等于 200px 时，加载更多\n          // rect.bottom 是容器底部相对于视口顶部的距离\n          // window.innerHeight 是视口的高度\n          if (rect.bottom <= window.innerHeight + 200) {\n              this.loadMoreResults();\n          }\n      };\n\n      // 监听器仍然绑定在 window 对象上\n      window.addEventListener('scroll', this.scrollListener, { passive: true });\n  }\n\n  // 加载搜索选项\n  async loadSearchOptions() {\n    try {\n      const statusDiv = document.getElementById('analects-search-status');\n      if (statusDiv) {\n        statusDiv.innerHTML = '<div class=\"analects-info\">📄 加载搜索选项...</div>';\n      }\n\n      const [characters, argumentsList, proverbs, chapters] = await Promise.all([\n        this.getCharacters(),\n        this.getArguments(),\n        this.getProverbs(),\n        this.getChapters()\n      ]);\n\n      const searchData = { character: characters, argument: argumentsList, proverb: proverbs, chapter: chapters };\n      \n      Object.entries(searchData).forEach(([type, data]) => {\n        this.updateSearchCount(type, data.length);\n        this.renderSearchOptions(`${type}-filters`, data, type);\n      });\n      \n      if (statusDiv) {\n        statusDiv.innerHTML = '<div class=\"analects-success\">✅ 搜索选项加载完成</div>';\n        setTimeout(() => statusDiv.innerHTML = '', 2000);\n      }\n    } catch (error) {\n      console.error('加载搜索选项失败:', error);\n      this.showSearchLoadError(error);\n    }\n  }\n\n  // 显示搜索加载错误\n  showSearchLoadError(error) {\n    const statusDiv = document.getElementById('analects-search-status');\n    if (statusDiv) {\n      statusDiv.innerHTML = '<div class=\"analects-error\">❌ 加载搜索选项失败，请检查配置</div>';\n    }\n    \n    ['character', 'argument', 'proverb', 'chapter'].forEach(type => {\n      const container = document.getElementById(`${type}-filters`);\n      if (container) {\n        container.innerHTML = '<div class=\"analects-no-options\">数据加载失败</div>';\n      }\n    });\n  }\n\n  // 更新搜索计数\n  updateSearchCount(type, count) {\n    const countElement = document.getElementById(`${type}-count`);\n    if (countElement) {\n      countElement.textContent = count;\n    }\n  }\n\n  // 渲染搜索选项\n  renderSearchOptions(containerId, options, type) {\n    const container = document.getElementById(containerId);\n    if (!container || !Array.isArray(options)) {\n      console.error('渲染搜索选项失败:', { containerId, options, type });\n      if (container) {\n        container.innerHTML = '<div class=\"analects-no-options\">数据格式错误</div>';\n      }\n      return;\n    }\n\n    if (options.length === 0) {\n      container.innerHTML = '<div class=\"analects-no-options\">暂无选项</div>';\n      return;\n    }\n\n    const tagCloud = document.createElement('div');\n    tagCloud.className = 'analects-tag-cloud';\n    tagCloud.setAttribute('data-type', type);\n\n    // 为章节添加\"全部\"选项\n    if (type === 'chapter') {\n      const allTag = this.createOptionTag('all', '全部章节', type, true);\n      tagCloud.appendChild(allTag);\n      this.selectedItems.chapter = { id: 'all', name: '全部章节' };\n    }\n\n    options.forEach(option => {\n      if (!option || (!option.id && option.id !== 0)) {\n        console.warn('选项缺少id:', option);\n        return;\n      }\n\n      const displayName = option.name || option.title || option.content || `选项${option.id}`;\n      const tag = this.createOptionTag(option.id, displayName, type, false);\n      tagCloud.appendChild(tag);\n    });\n\n    container.innerHTML = '';\n    container.appendChild(tagCloud);\n  }\n\n  // 创建选项标签\n  createOptionTag(id, displayName, type, isSelected = false) {\n    const tag = document.createElement('label');\n    tag.className = `analects-option-tag ${isSelected ? 'selected' : ''}`;\n    tag.setAttribute('data-id', id);\n    tag.setAttribute('data-name', displayName.toLowerCase());\n    \n    tag.innerHTML = `\n      <input type=\"checkbox\" value=\"${id}\" data-type=\"${type}\" ${isSelected ? 'checked' : ''}>\n      <span>${displayName}</span>\n    `;\n\n    tag.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      this.handleOptionClick(tag, type, id, displayName);\n    });\n\n    return tag;\n  }\n\n  // 处理选项点击\n  handleOptionClick(tag, type, id, displayName) {\n    const checkbox = tag.querySelector('input[type=\"checkbox\"]');\n    const tagCloud = tag.closest('.analects-tag-cloud');\n    \n    if (type === 'chapter') {\n      // 章节单选逻辑\n      tagCloud.querySelectorAll('input[type=\"checkbox\"]').forEach(cb => {\n        cb.checked = false;\n        cb.closest('.analects-option-tag').classList.remove('selected');\n      });\n      \n      checkbox.checked = true;\n      tag.classList.add('selected');\n      this.selectedItems.chapter = { id, name: displayName };\n    } else {\n      // 其他类型多选逻辑\n      const wasChecked = checkbox.checked;\n      checkbox.checked = !wasChecked;\n      tag.classList.toggle('selected', checkbox.checked);\n      \n      if (checkbox.checked) {\n        this.addSelectedItem(type, id, displayName);\n      } else {\n        this.removeSelectedItem(type, id);\n      }\n    }\n    \n    this.markSearchConditionsChanged();\n    this.renderSelectedItems();\n  }\n\n  // 选中项目管理方法\n  addSelectedItem(type, id, name) {\n    const key = type + 's';\n    this.selectedItems[key].set(parseInt(id), name);\n  }\n\n  removeSelectedItem(type, id) {\n    const key = type + 's';\n    this.selectedItems[key].delete(parseInt(id));\n  }\n\n  // 渲染已选择的项目\n  renderSelectedItems() {\n    const selectedContainer = document.getElementById('selected-items-container');\n    const tagsContainer = document.getElementById('selected-tags-container');\n    \n    if (!selectedContainer || !tagsContainer) return;\n\n    const totalSelected = this.selectedItems.characters.size + \n                         this.selectedItems.arguments.size + \n                         this.selectedItems.proverbs.size +\n                         (this.selectedItems.chapter && this.selectedItems.chapter.id !== 'all' ? 1 : 0);\n\n    if (totalSelected === 0) {\n      selectedContainer.style.display = 'none';\n      return;\n    }\n\n    selectedContainer.style.display = 'block';\n    tagsContainer.innerHTML = '';\n\n    // 渲染章节标签（仅当不是\"全部\"时）\n    if (this.selectedItems.chapter && this.selectedItems.chapter.id !== 'all') {\n      const tag = this.createSelectedTag('chapter', this.selectedItems.chapter.id, this.selectedItems.chapter.name);\n      tagsContainer.appendChild(tag);\n    }\n\n    // 渲染其他类型的标签\n    ['characters', 'arguments', 'proverbs'].forEach(type => {\n      this.selectedItems[type].forEach((name, id) => {\n        const tag = this.createSelectedTag(type.slice(0, -1), id, name);\n        tagsContainer.appendChild(tag);\n      });\n    });\n  }\n\n  // 创建已选择的标签\n  createSelectedTag(type, id, name) {\n    const tag = document.createElement('div');\n    tag.className = `analects-selected-tag ${type}`;\n    tag.innerHTML = `\n      <span>${name}</span>\n      <span class=\"remove-tag\" data-type=\"${type}\" data-id=\"${id}\">×</span>\n    `;\n\n    tag.querySelector('.remove-tag').addEventListener('click', (e) => {\n      e.stopPropagation();\n      this.removeSelectedItemById(type, id);\n    });\n\n    return tag;\n  }\n\n  // 通过ID移除选中项目\n  removeSelectedItemById(type, id) {\n    if (type === 'chapter') {\n      this.selectedItems.chapter = { id: 'all', name: '全部章节' };\n      \n      const allCheckbox = document.querySelector('input[data-type=\"chapter\"][value=\"all\"]');\n      const currentCheckbox = document.querySelector(`input[data-type=\"chapter\"][value=\"${id}\"]`);\n      \n      if (allCheckbox) {\n        allCheckbox.checked = true;\n        allCheckbox.closest('.analects-option-tag').classList.add('selected');\n      }\n      \n      if (currentCheckbox) {\n        currentCheckbox.checked = false;\n        currentCheckbox.closest('.analects-option-tag').classList.remove('selected');\n      }\n    } else {\n      this.removeSelectedItem(type, id);\n      \n      const checkbox = document.querySelector(`input[data-type=\"${type}\"][value=\"${id}\"]`);\n      if (checkbox) {\n        checkbox.checked = false;\n        const tag = checkbox.closest('.analects-option-tag');\n        if (tag) {\n          tag.classList.remove('selected');\n        }\n      }\n    }\n    \n    this.markSearchConditionsChanged();\n    this.renderSelectedItems();\n  }\n\n  // 过滤选项\n  filterOptions(type, searchTerm) {\n    const container = document.getElementById(`${type}-filters`);\n    if (!container) return;\n\n    const tags = container.querySelectorAll('.analects-option-tag');\n    const term = searchTerm.toLowerCase().trim();\n\n    let visibleCount = 0;\n    tags.forEach(tag => {\n      const name = tag.getAttribute('data-name');\n      const shouldShow = !term || name.includes(term);\n      \n      tag.style.display = shouldShow ? 'inline-flex' : 'none';\n      if (shouldShow) visibleCount++;\n    });\n\n    const countElement = document.getElementById(`${type}-count`);\n    if (countElement) {\n      const totalCount = tags.length;\n      countElement.textContent = term ? `${visibleCount}/${totalCount}` : totalCount;\n    }\n  }\n\n  // 执行搜索\n  async performSearch() {\n    if (!this.isSearchInitialized) return;\n\n    const keyword = document.getElementById('analects-keyword')?.value;\n    const resultsContainer = document.getElementById('analects-results-container');\n    const statusDiv = document.getElementById('analects-search-status');\n    const loadCompleteDiv = document.getElementById('analects-load-complete');\n    const loadingMoreDiv = document.getElementById('analects-loading-more');\n  \n    if (!resultsContainer) return;\n\n    const selectedCharacters = Array.from(this.selectedItems.characters.keys());\n    const selectedArguments = Array.from(this.selectedItems.arguments.keys());\n    const selectedProverbs = Array.from(this.selectedItems.proverbs.keys());\n    const selectedChapter = this.selectedItems.chapter?.id === 'all' ? 'all' : this.selectedItems.chapter?.id || 'all';\n\n    this.currentFilters = {\n      keyword: keyword?.trim(),\n      characterIds: selectedCharacters,\n      argumentIds: selectedArguments,\n      proverbIds: selectedProverbs,\n      chapter: selectedChapter\n    };\n\n    this.resetPagination();\n    this.searchConditionsChanged = false;\n    this.isAutoLoadingEnabled = false;\n\n    const searchBtn = document.getElementById('analects-search-btn');\n    if (searchBtn) {\n      searchBtn.classList.remove('search-changed');\n    }\n\n    if (loadCompleteDiv) loadCompleteDiv.style.display = 'none';\n    if (loadingMoreDiv) loadingMoreDiv.style.display = 'none';\n    if (statusDiv) statusDiv.innerHTML = '<div class=\"analects-info\">🔍 搜索中...</div>';\n    resultsContainer.innerHTML = '';\n\n    try {\n      const result = await this.fetchAnalects(this.currentFilters, 0, this.pagination.pageSize);\n      this.isAutoLoadingEnabled = true;\n      this.handleFirstSearchResult(result, statusDiv, resultsContainer);\n    } catch (error) {\n      console.error('搜索失败:', error);\n      this.handleSearchError(error, statusDiv, resultsContainer);\n    }\n  }\n\n  // 处理首次搜索结果\n  async handleFirstSearchResult(result, statusDiv, resultsContainer) {\n    if (result.data.length === 0) {\n      if (statusDiv) {\n        statusDiv.innerHTML = '<div class=\"analects-warning\">⚠️ 未找到匹配的章节</div>';\n      }\n      this.isAutoLoadingEnabled = false;\n      return;\n    }\n\n    const uniqueResults = result.data.filter(entry => {\n      if (!entry.id || this.pagination.loadedIds.has(entry.id)) {\n        return false;\n      }\n      this.pagination.loadedIds.add(entry.id);\n      return true;\n    });\n\n    this.pagination.currentPage = 1;\n    this.pagination.totalLoaded = uniqueResults.length;\n    this.pagination.hasMore = this.pagination.totalLoaded < this.pagination.totalCount;\n\n    if (statusDiv) {\n      const totalCount = this.pagination.totalCount > 0 ? this.pagination.totalCount : uniqueResults.length;\n    \n      if (this.pagination.hasMore) {\n        statusDiv.innerHTML = `<div class=\"analects-success\">✅ 找到 ${totalCount} 条结果，每次加载 ${this.pagination.pageSize} 条，滚动自动加载更多</div>`;\n      } else {\n        statusDiv.innerHTML = `<div class=\"analects-success\">✅ 已找到全部 ${totalCount} 条结果</div>`;\n        const loadCompleteDiv = document.getElementById('analects-load-complete');\n        if (loadCompleteDiv) {\n          loadCompleteDiv.style.display = 'block';\n        }\n      }\n    }\n\n    uniqueResults.forEach((entry, index) => {\n      setTimeout(() => {\n        this.renderAnalectCard(entry, resultsContainer);\n      }, index * 50);\n    });\n  }\n  \n  // 重置分页参数\n  resetPagination() {\n    Object.assign(this.pagination, {\n      currentPage: 0,\n      totalLoaded: 0,\n      hasMore: true,\n      isLoading: false,\n      totalCount: 0\n    });\n    this.pagination.loadedIds.clear();\n  }\n\n  // 处理搜索错误\n  handleSearchError(error, statusDiv, resultsContainer) {\n    if (statusDiv) {\n      statusDiv.innerHTML = `<div class=\"analects-error\">❌ 搜索失败：${error.message}</div>`;\n    }\n    resultsContainer.innerHTML = `\n      <div class=\"analects-error\">\n        <h3>搜索失败</h3>\n        <p>${error.message}</p>\n        <p style=\"font-size: 14px; color: #666; margin-top: 12px;\">\n          请检查Supabase配置是否正确，或查看控制台了解详细错误信息。\n        </p>\n      </div>\n    `;\n    this.isAutoLoadingEnabled = false;\n  }\n\n  // 滚动加载更多\n  async loadMoreResults() {\n    if (this.pagination.isLoading || !this.pagination.hasMore || !this.isAutoLoadingEnabled) {\n      return;\n    }\n\n    this.pagination.isLoading = true;\n  \n    const loadingMoreDiv = document.getElementById('analects-loading-more');\n    if (loadingMoreDiv) loadingMoreDiv.style.display = 'block';\n\n    try {\n      const result = await this.fetchAnalects(\n        this.currentFilters, \n        this.pagination.currentPage, \n        this.pagination.pageSize\n      );\n\n      const uniqueResults = result.data.filter(entry => {\n        if (!entry.id || this.pagination.loadedIds.has(entry.id)) {\n          return false;\n        }\n        this.pagination.loadedIds.add(entry.id);\n        return true;\n      });\n\n      const resultsContainer = document.getElementById('analects-results-container');\n      uniqueResults.forEach((entry, index) => {\n        setTimeout(() => {\n          this.renderAnalectCard(entry, resultsContainer);\n        }, index * 50);\n      });\n\n      this.pagination.currentPage++;\n      this.pagination.totalLoaded += uniqueResults.length;\n      this.pagination.hasMore = this.pagination.totalLoaded < this.pagination.totalCount;\n\n      this.updateScrollStatus();\n\n    } catch (error) {\n      console.error('加载更多结果失败:', error);\n      const statusDiv = document.getElementById('analects-search-status');\n      if (statusDiv) {\n        statusDiv.innerHTML = '<div class=\"analects-error\">❌ 加载更多结果失败，请稍后重试</div>';\n      }\n    } finally {\n      this.pagination.isLoading = false;\n      if (loadingMoreDiv) loadingMoreDiv.style.display = 'none';\n    }\n  }\n\n  // 滚动加载时的状态更新\n  updateScrollStatus() {\n    const statusDiv = document.getElementById('analects-search-status');\n    const loadCompleteDiv = document.getElementById('analects-load-complete');\n  \n    if (!statusDiv || this.pagination.totalLoaded === 0) return;\n\n    const displayedCount = this.pagination.totalLoaded;\n    const totalCount = this.pagination.totalCount;\n\n    if (this.pagination.hasMore) {\n      statusDiv.innerHTML = `\n        <div class=\"analects-success\">\n          ✅ 找到 ${totalCount} 条结果，已显示 ${displayedCount} 条，滚动自动加载更多\n        </div>`;\n    } else {\n      statusDiv.innerHTML = `\n        <div class=\"analects-success\">\n          ✅ 共找到 ${totalCount} 条结果，已全部显示完毕\n        </div>`;\n      this.isAutoLoadingEnabled = false;\n      if (loadCompleteDiv) {\n        loadCompleteDiv.style.display = 'block';\n      }\n    }\n  }\n  \n  // 重置所有搜索内容\n  resetSearch() {\n    // 清空关键词\n    const keywordInput = document.getElementById('analects-keyword');\n    if (keywordInput) keywordInput.value = '';\n\n    // 清空搜索框\n    ['character-search', 'argument-search', 'proverb-search', 'chapter-search'].forEach(id => {\n      const input = document.getElementById(id);\n      if (input) {\n        input.value = '';\n        this.filterOptions(id.split('-')[0], '');\n      }\n    });\n\n    // 取消所有选中状态\n    const checkboxes = document.querySelectorAll('.analects-tag-cloud input[type=\"checkbox\"]');\n    const tags = document.querySelectorAll('.analects-option-tag');\n    \n    checkboxes.forEach(cb => cb.checked = false);\n    tags.forEach(tag => tag.classList.remove('selected'));\n\n    // 章节重置为\"全部\"\n    const allCheckbox = document.querySelector('input[data-type=\"chapter\"][value=\"all\"]');\n    if (allCheckbox) {\n      allCheckbox.checked = true;\n      allCheckbox.closest('.analects-option-tag').classList.add('selected');\n    }\n\n    // 清空内部选中项目存储\n    this.selectedItems.characters.clear();\n    this.selectedItems.arguments.clear();\n    this.selectedItems.proverbs.clear();\n    this.selectedItems.chapter = { id: 'all', name: '全部章节' };\n\n    // 清空结果\n    const resultsContainer = document.getElementById('analects-results-container');\n    const loadCompleteDiv = document.getElementById('analects-load-complete');\n    \n    if (resultsContainer) resultsContainer.innerHTML = '';\n    if (loadCompleteDiv) loadCompleteDiv.style.display = 'none';\n\n    // 重置分页和状态\n    this.resetPagination();\n    this.isAutoLoadingEnabled = false;\n    this.searchConditionsChanged = false;\n\n    // 清除搜索按钮的视觉提示\n    const searchBtn = document.getElementById('analects-search-btn');\n    if (searchBtn) {\n      searchBtn.classList.remove('search-changed');\n    }\n\n    // 更新渲染\n    this.renderSelectedItems();\n    this.showStatusMessage('🔄 已重置所有搜索条件', 'success');\n  }\n\n  // 显示状态消息\n  showStatusMessage(message, type = 'info', duration = 2000) {\n    const statusDiv = document.getElementById('analects-search-status');\n    if (statusDiv) {\n      const className = type === 'success' ? 'analects-success' : \n                      type === 'error' ? 'analects-error' : 'analects-info';\n      statusDiv.innerHTML = `<div class=\"${className}\">${message}</div>`;\n      if (duration > 0) {\n        setTimeout(() => statusDiv.innerHTML = '', duration);\n      }\n    }\n  }\n\n  // 测试连接方法\n  async testConnection() {\n    try {\n      const data = await this.apiRequest('characters', { limit: '1' });\n      return {\n        success: true,\n        message: '连接测试成功',\n        sampleData: data\n      };\n    } catch (error) {\n      console.error('连接测试失败:', error);\n      return {\n        success: false,\n        message: error.message,\n        error: error\n      };\n    }\n  }\n}\n\n// 全局复制方法\nif (typeof window !== 'undefined') {\n  window.AnalectsSDK = AnalectsSDK;\n  \n  window.AnalectsSDK.copyText = async function(text, button) {\n    const originalTitle = button.title;\n    try {\n      if (navigator.clipboard) {\n        await navigator.clipboard.writeText(text);\n      } else {\n        const textArea = document.createElement('textarea');\n        textArea.value = text;\n        Object.assign(textArea.style, {\n          position: 'fixed',\n          left: '-999999px',\n          top: '-999999px'\n        });\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        const successful = document.execCommand('copy');\n        document.body.removeChild(textArea);\n        if (!successful) throw new Error('Copy command failed');\n      }\n      \n      button.title = '已复制！';\n      setTimeout(() => button.title = originalTitle, 2000);\n    } catch (err) {\n      console.error('复制失败:', err);\n      button.title = '复制失败';\n      setTimeout(() => button.title = originalTitle, 2000);\n    }\n  };\n  \n  window.initAnalects = (config) => new AnalectsSDK(config);\n}\n\n// 自动初始化\nif (typeof document !== 'undefined') {\n  document.addEventListener('DOMContentLoaded', () => {\n    const autoInit = document.querySelector('[data-analects-auto-init]');\n    if (!autoInit) return;\n    \n    const supabaseUrl = autoInit.getAttribute('data-supabase-url');\n    const supabaseKey = autoInit.getAttribute('data-supabase-key');\n    \n    if (supabaseUrl && supabaseKey) {\n      const config = { supabaseUrl, supabaseKey };\n      const sdk = new AnalectsSDK(config);\n      \n      document.querySelectorAll('[data-analects-search]')\n        .forEach(container => sdk.renderSearchInterface(container));\n      \n      document.querySelectorAll('[data-analects-daily]')\n        .forEach(container => sdk.renderDailyAnalect(container));\n    }\n  });\n}\n\n// 模块导出\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = AnalectsSDK;\n}\n\nexport default AnalectsSDK;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.hmd = function(module) {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: function() {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(954);\n",""],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_regeneratorDefine","_invoke","enumerable","configurable","writable","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_objectWithoutProperties","_objectWithoutPropertiesLoose","indexOf","propertyIsEnumerable","hasOwnProperty","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","_next","_throw","_classCallCheck","_defineProperties","key","_createClass","_toPrimitive","_typeof","toPrimitive","String","Number","AnalectsSDK","config","undefined","supabaseUrl","supabaseKey","apiBaseUrl","concat","headers","cache","characters","proverbs","chapters","selectedItems","Map","chapter","id","name","pagination","pageSize","currentPage","totalLoaded","isLoading","hasMore","totalCount","loadedIds","Set","currentFilters","isSearchInitialized","scrollListener","isAutoLoadingEnabled","searchConditionsChanged","validateConfig","includes","Error","_apiRequest","_callee","endpoint","params","count","urlParams","url","existingPrefer","response","errorText","data","contentRange","match","_args","_context","_excluded","URLSearchParams","toString","fetch","method","mode","ok","text","console","error","status","statusText","json","get","parseInt","apiRequest","_x","_fetchAnalects","_callee2","filters","page","uniqueData","totalLoadedSoFar","_args2","_t","_context2","buildQueryParams","removeDuplicates","getTotalCount","total","fetchAnalects","select","order","limit","offset","trim","characterIds","character_ids","join","argumentIds","argument_ids","proverbIds","proverb_ids","keyword","rawKeyword","replace","keywords","split","k","keywordGroups","map","kw","searchFields","and","highlightKeywords","_this","escapeHtml","escapedText","escapedKeyword","regex","RegExp","escapeRegExp","div","document","createElement","textContent","innerHTML","string","seenIds","_iterator","_createForOfIteratorHelper","_step","s","entry","has","add","err","_getTotalCount","_callee3","result","_t2","_context3","_x2","sortByPinyin","items","field","sort","b","textA","textB","localeCompare","numeric","sensitivity","sortChaptersByNumber","_this2","getChapterNumber","chapterName","numStr","test","chineseToNumber","chineseNum","chineseNumbers","temp","startsWith","substring","char","num","_getData","_callee4","type","endpoints","uniqueChapters","sortField","_t3","_context4","fromEntries","_toConsumableArray","item","message","getData","_x3","_getCharacters","_callee5","_context5","getCharacters","_getArguments","_callee6","_context6","getArguments","_getProverbs","_callee7","_context7","getProverbs","_getChapters","_callee8","_context8","getChapters","_getDailyAnalect","_callee9","randomIndex","_t4","_context9","Math","floor","random","getDailyAnalect","_advancedSearch","_callee0","_args0","_context0","advancedSearch","formatDate","date","Date","year","getFullYear","month","getMonth","day","getDate","weekdays","weekday","getDay","full","iso","toISOString","generateShareLinks","currentUrl","window","location","href","original_text","twitter","encodeURIComponent","facebook","copy","email","_copyToClipboard","_callee1","textArea","successful","_t5","_context1","navigator","clipboard","writeText","assign","style","position","left","top","body","appendChild","focus","execCommand","removeChild","copyToClipboard","_x4","renderAnalectCard","container","card","className","generateResultCardHTML","setTimeout","classList","_this$currentFilters","_this3","currentKeyword","getRelatedData","_item$field","_item$field2","_item$field3","title","content","Boolean","entry_characters","argumentsList","entry_arguments","entry_proverbs","createTagGroup","label","highlightedOriginal","highlightedTranslation","translation","highlightedAnnotation","annotation","section_number","renderSearchInterface","getSearchInterfaceHTML","initializeSearchEvents","loadSearchOptions","initializeScrollFeatures","createSearchSection","types","character","argument","proverb","containerClass","wrapperStyle","renderDailyAnalect","_this4","dateInfo","shareLinks","getDailyAnalectHTML","catch","createShareButton","popup","copyText","icons","popupHandler","_this5","eventMap","analectsSearchBtn","performSearch","analectsResetBtn","resetSearch","entries","_ref","_ref2","_slicedToArray","handler","element","getElementById","addEventListener","keywordInput","markSearchConditionsChanged","searchInput","filterOptions","target","searchBtn","scrollToTopBtn","scrollTo","behavior","toggle","scrollY","setupAutoLoad","_this6","removeEventListener","resultsContainer","rect","getBoundingClientRect","bottom","innerHeight","loadMoreResults","passive","_loadSearchOptions","_callee10","_this7","statusDiv","_yield$Promise$all","_yield$Promise$all2","searchData","_t6","_context10","all","_ref3","_ref4","updateSearchCount","renderSearchOptions","showSearchLoadError","countElement","containerId","options","_this8","Array","isArray","tagCloud","setAttribute","allTag","createOptionTag","option","warn","tag","_this9","isSelected","toLowerCase","preventDefault","stopPropagation","handleOptionClick","checkbox","querySelector","closest","querySelectorAll","cb","checked","remove","wasChecked","addSelectedItem","removeSelectedItem","renderSelectedItems","set","delete","_this0","selectedContainer","tagsContainer","totalSelected","size","display","createSelectedTag","slice","_this1","removeSelectedItemById","allCheckbox","currentCheckbox","searchTerm","tags","term","visibleCount","getAttribute","shouldShow","_performSearch","_callee11","_document$getElementB","_this$selectedItems$c","_this$selectedItems$c2","loadCompleteDiv","loadingMoreDiv","selectedCharacters","selectedArguments","selectedProverbs","selectedChapter","_t7","_context11","from","resetPagination","handleFirstSearchResult","handleSearchError","_handleFirstSearchResult","_callee12","_this10","uniqueResults","_context12","index","_x5","_x6","_x7","clear","_loadMoreResults","_callee13","_this11","_t8","_context13","updateScrollStatus","displayedCount","_this12","input","checkboxes","showStatusMessage","duration","_testConnection","_callee14","_t9","_context14","success","sampleData","testConnection","_ref5","_callee15","button","originalTitle","_t0","_context15","_x8","_x9","initAnalects","autoInit","sdk","module","exports"],"sourceRoot":""}