{"version":3,"file":"analects.js","mappings":"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","sources":["webpack://AnalectsSDK/webpack/universalModuleDefinition","webpack://AnalectsSDK/webpack/bootstrap","webpack://AnalectsSDK/webpack/runtime/define property getters","webpack://AnalectsSDK/webpack/runtime/hasOwnProperty shorthand","webpack://AnalectsSDK/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AnalectsSDK\"] = factory();\n\telse\n\t\troot[\"AnalectsSDK\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// 引入样式（由 webpack 处理）\nimport './styles/analects.css';\n\n/**\n * AnalectsSDK - 干净可用的最小实现\n * 满足：\n * 1) 章节筛选为单选、隐藏圆圈\n * 2) 默认“全部章节”为选中；选中其它章节时，“全部章节”变为白底\n * 3) 切换章节/筛选时重置分页，杜绝重复或串章数据\n * 4) 初始不自动搜索，只有点击“搜索”后才触发；滚动加载仅在有过搜索后启用\n * 5) 状态条显示“共找到X条结果，滚动或点击加载更多”；全部加载后显示“已加载完毕”\n *\n * 说明：\n * - 通过 Supabase PostgREST 访问：/rest/v1\n * - 服务端过滤：关键词（or=ilike*）、章节（eq），分页（limit/offset）\n * - 关联过滤（人物/论点/谚语）在客户端完成 AND 语义（通过嵌套选择返回的 id 列表判断）\n * - 结果总数通过 Prefer: count=exact + Content-Range 读取\n */\nexport default class AnalectsSDK {\n  constructor(config = {}) {\n    this.supabaseUrl = config.supabaseUrl || '';\n    this.supabaseKey = config.supabaseKey || '';\n    this.apiBaseUrl = this.supabaseUrl ? `${this.supabaseUrl}/rest/v1` : '';\n\n    this.headers = {\n      'apikey': this.supabaseKey,\n      'Authorization': `Bearer ${this.supabaseKey}`,\n      'Content-Type': 'application/json',\n      // 关键：用于拿到 Content-Range 统计总数\n      'Prefer': 'return=representation,count=exact'\n    };\n\n    // 搜索/分页状态\n    this.state = {\n      didSearch: false,\n      page: 0,\n      pageSize: 10,\n      hasMore: false,\n      totalCount: 0,\n      isLoading: false,\n      currentFilters: null,\n      searchToken: 0\n    };\n\n    // 选项缓存\n    this.cache = {\n      characters: null,\n      arguments: null,\n      proverbs: null,\n      chapters: null,\n    };\n\n    // 选中项\n    this.selected = {\n      chapter: { id: 'all', name: '全部章节' },\n      characters: new Map(), // id -> name\n      arguments: new Map(),\n      proverbs: new Map(),\n    };\n  }\n\n  // ---------- 基础请求 ----------\n  async _fetch(url) {\n    if (!this.supabaseUrl || !this.supabaseKey) {\n      throw new Error('Supabase 配置无效：请在初始化时传入 supabaseUrl 与 supabaseKey');\n    }\n    const res = await fetch(url, { headers: this.headers });\n    if (!res.ok) {\n      const text = await res.text().catch(() => '');\n      throw new Error(`请求失败 ${res.status}: ${text || res.statusText}`);\n    }\n    const contentRange = res.headers.get('content-range');\n    const total = contentRange && contentRange.includes('/') ? parseInt(contentRange.split('/').pop(), 10) : null;\n    const data = await res.json();\n    return { data, total };\n  }\n\n  // ---------- 选项获取（一次性加载并缓存） ----------\n  async _getOptions(endpoint, pick = (r) => ({ id: r.id, name: r.name || r.title || r.content })) {\n    if (this.cache[endpoint]) return this.cache[endpoint];\n    const url = `${this.apiBaseUrl}/${endpoint}?select=id,name,title,content&order=id.asc&limit=1000`;\n    const { data } = await this._fetch(url);\n    const cleaned = (Array.isArray(data) ? data : []).map(pick).filter(x => x && x.id != null);\n    this.cache[endpoint] = cleaned;\n    return cleaned;\n  }\n  getCharacters() { return this._getOptions('characters'); }\n  getArguments()  { return this._getOptions('arguments'); }\n  getProverbs()   { return this._getOptions('proverbs'); }\n  async getChapters() {\n    if (this.cache.chapters) return this.cache.chapters;\n    // 直接从 analects_entries 聚合章节\n    const url = `${this.apiBaseUrl}/analects_entries?select=chapter&order=chapter.asc&limit=10000`;\n    const { data } = await this._fetch(url);\n    const set = new Set();\n    (data || []).forEach(r => { if (r && r.chapter != null) set.add(String(r.chapter)); });\n    const chapters = Array.from(set).map((c, i) => ({ id: c, name: c }));\n    this.cache.chapters = chapters;\n    return chapters;\n  }\n\n  // ---------- 数据查询 ----------\n  _buildEntriesUrl(filters, page, pageSize) {\n    const select =\n      'id,chapter,section_number,original_text,translation,annotation,' +\n      'entry_characters(character_id),' +\n      'entry_arguments(argument_id),' +\n      'entry_proverbs(proverb_id)';\n    let url = `${this.apiBaseUrl}/analects_entries?select=${encodeURIComponent(select)}&order=id.asc`;\n\n    const conds = [];\n\n    // 关键词（服务端粗过滤）\n    if (filters.keyword) {\n      const kw = filters.keyword.trim();\n      if (kw) {\n        const encoded = encodeURIComponent(`(original_text.ilike.*${kw}*,translation.ilike.*${kw}*,annotation.ilike.*${kw}*)`);\n        conds.push(`or=${encoded}`);\n      }\n    }\n\n    // 章节（服务端）\n    if (filters.chapter && filters.chapter !== 'all') {\n      conds.push(`chapter=eq.${encodeURIComponent(filters.chapter)}`);\n    }\n\n    // 分页\n    conds.push(`limit=${pageSize}`);\n    conds.push(`offset=${page * pageSize}`);\n\n    if (conds.length) url += '&' + conds.join('&');\n    return url;\n  }\n\n  async fetchEntries(filters, page = 0, pageSize = 10) {\n    const url = this._buildEntriesUrl(filters, page, pageSize);\n    const { data, total } = await this._fetch(url);\n    // 客户端 AND 过滤（人物/论点/谚语）\n    let list = Array.isArray(data) ? data : [];\n\n    const allIn = (selectedIds, entryIds) =>\n      [...selectedIds].every(id => entryIds.includes(parseInt(id, 10)));\n\n    if (filters.characterIds && filters.characterIds.length) {\n      list = list.filter(e => {\n        const ids = (e.entry_characters || []).map(x => x.character_id).filter(x => x != null);\n        return allIn(filters.characterIds, ids);\n      });\n    }\n    if (filters.argumentIds && filters.argumentIds.length) {\n      list = list.filter(e => {\n        const ids = (e.entry_arguments || []).map(x => x.argument_id).filter(x => x != null);\n        return allIn(filters.argumentIds, ids);\n      });\n    }\n    if (filters.proverbIds && filters.proverbIds.length) {\n      list = list.filter(e => {\n        const ids = (e.entry_proverbs || []).map(x => x.proverb_id).filter(x => x != null);\n        return allIn(filters.proverbIds, ids);\n      });\n    }\n\n    // 关键词二次过滤（保证与服务端一致）\n    if (filters.keyword) {\n      const kw = filters.keyword.trim().toLowerCase();\n      list = list.filter(e => {\n        const t1 = (e.original_text || '').toLowerCase();\n        const t2 = (e.translation || '').toLowerCase();\n        const t3 = (e.annotation || '').toLowerCase();\n        return t1.includes(kw) || t2.includes(kw) || t3.includes(kw);\n      });\n    }\n\n    return {\n      data: list,\n      // 注意：total 为服务端（仅关键词+章节）统计值，这里用它作为基数；\n      // 客户端 AND 过滤后数量可能更少，因此我们以 list.length 是否等于 pageSize 判断是否“可能还有更多”\n      totalCount: typeof total === 'number' ? total : list.length,\n      hasMore: list.length === pageSize\n    };\n  }\n\n  // ---------- 每日论语 ----------\n  async renderDailyAnalect(container) {\n    if (!container) return;\n    container.innerHTML = `<div class=\"analects-card\"><div class=\"analects-loading\">加载每日论语...</div></div>`;\n\n    try {\n      // 获取总数\n      const countUrl = `${this.apiBaseUrl}/analects_entries?select=id`;\n      const { total } = await this._fetch(countUrl);\n      const totalCount = typeof total === 'number' ? total : 0;\n      if (!totalCount) {\n        container.innerHTML = `<div class=\"analects-error\">暂无数据</div>`;\n        return;\n      }\n\n      // 用日期（UTC）决定 offset\n      const today = new Date();\n      const dayIndex = Math.floor((Date.UTC(today.getFullYear(), today.getMonth(), today.getDate()) / 86400000)) % totalCount;\n\n      const url = `${this.apiBaseUrl}/analects_entries?select=id,chapter,section_number,original_text,translation,annotation&order=id.asc&limit=1&offset=${dayIndex}`;\n      const { data } = await this._fetch(url);\n      const item = (data || [])[0];\n\n      if (!item) {\n        container.innerHTML = `<div class=\"analects-error\">未找到每日论语</div>`;\n        return;\n      }\n\n      container.innerHTML = `\n        <div class=\"analects-card\">\n          <div class=\"analects-card-header\">\n            <h3 class=\"analects-card-title\">📜 每日论语</h3>\n            <div class=\"analects-card-subtitle\">${this._fmtChapter(item)}</div>\n          </div>\n          <div class=\"analects-card-body\">\n            <div class=\"analects-text\">${this._safe(item.original_text)}</div>\n            ${item.translation ? `<div class=\"analects-subtext\">${this._safe(item.translation)}</div>` : ''}\n            ${item.annotation ? `<div class=\"analects-subtext muted\">${this._safe(item.annotation)}</div>` : ''}\n          </div>\n        </div>\n      `;\n    } catch (err) {\n      container.innerHTML = `<div class=\"analects-error\">加载失败：${err.message}</div>`;\n    }\n  }\n\n  _fmtChapter(e) {\n    const ch = e.chapter != null ? String(e.chapter) : '';\n    const sec = e.section_number != null ? String(e.section_number) : '';\n    if (ch && sec) return `第 ${ch} 篇 · 第 ${sec} 章`;\n    if (ch) return `第 ${ch} 篇`;\n    return '';\n  }\n\n  _safe(t) {\n    return (t || '').replace(/[&<>]/g, s => ({'&':'&amp;','<':'&lt;','>':'&gt;'}[s]));\n  }\n\n  // ---------- 搜索界面 ----------\n  async renderSearchInterface(container) {\n    if (!container) return;\n    container.innerHTML = this._searchSkeleton();\n\n    // 绑定元素\n    const keywordInput = container.querySelector('#analects-keyword');\n    const searchBtn = container.querySelector('#analects-search-btn');\n    const results = container.querySelector('#analects-results');\n    const statusBar = container.querySelector('#analects-status');\n    const loadMoreBtn = container.querySelector('#analects-load-more-btn');\n    const chapterCloud = container.querySelector('#chapter-filters');\n    const charCloud = container.querySelector('#character-filters');\n    const argCloud = container.querySelector('#argument-filters');\n    const provCloud = container.querySelector('#proverb-filters');\n\n    // 初始状态：不搜索\n    statusBar.textContent = '请输入关键词或选择筛选后点击“搜索”。';\n\n    // 渲染筛选选项\n    const [chapters, characters, argumentsList, proverbs] = await Promise.all([\n      this.getChapters(), this.getCharacters(), this.getArguments(), this.getProverbs()\n    ]);\n\n    // 章节（单选 + “全部章节”）\n    this._renderChapterChips(chapterCloud, chapters);\n\n    // 其余为多选\n    this._renderMultiChips(charCloud, characters, this.selected.characters);\n    this._renderMultiChips(argCloud, argumentsList, this.selected.arguments);\n    this._renderMultiChips(provCloud, proverbs, this.selected.proverbs);\n\n    // 点击搜索\n    searchBtn.addEventListener('click', async () => {\n      await this._startSearch({\n        keyword: (keywordInput.value || '').trim(),\n        characterIds: Array.from(this.selected.characters.keys()),\n        argumentIds: Array.from(this.selected.arguments.keys()),\n        proverbIds: Array.from(this.selected.proverbs.keys()),\n        chapter: this.selected.chapter?.id || 'all'\n      }, { results, statusBar, loadMoreBtn });\n    });\n\n    // 加载更多（点击）\n    loadMoreBtn.addEventListener('click', async () => {\n      await this._loadMore({ results, statusBar, loadMoreBtn });\n    });\n\n    // 滚动加载（仅在已搜索后生效）\n    const onScroll = async () => {\n      if (!this.state.didSearch || this.state.isLoading || !this.state.hasMore) return;\n      const rect = loadMoreBtn.getBoundingClientRect();\n      // 当按钮接近视口底部时触发\n      if (rect.top < window.innerHeight + 120) {\n        await this._loadMore({ results, statusBar, loadMoreBtn });\n      }\n    };\n    window.addEventListener('scroll', onScroll);\n  }\n\n  _searchSkeleton() {\n    return `\n      <div class=\"analects-card\">\n        <div class=\"analects-card-header\">\n          <h3 class=\"analects-card-title\">🔎 论语查询</h3>\n          <div class=\"analects-searchbar\">\n            <input id=\"analects-keyword\" class=\"analects-input\" placeholder=\"输入关键词（原文/译文/注释）\">\n            <button id=\"analects-search-btn\" class=\"analects-btn primary\">搜索</button>\n          </div>\n        </div>\n        <div class=\"analects-card-body\">\n          <div class=\"analects-filters\">\n            <div class=\"analects-filter\">\n              <div class=\"analects-filter-title\">章节</div>\n              <div id=\"chapter-filters\" class=\"analects-tag-cloud\"></div>\n            </div>\n            <div class=\"analects-filter\">\n              <div class=\"analects-filter-title\">人物</div>\n              <div id=\"character-filters\" class=\"analects-tag-cloud\"></div>\n            </div>\n            <div class=\"analects-filter\">\n              <div class=\"analects-filter-title\">论点</div>\n              <div id=\"argument-filters\" class=\"analects-tag-cloud\"></div>\n            </div>\n            <div class=\"analects-filter\">\n              <div class=\"analects-filter-title\">谚语</div>\n              <div id=\"proverb-filters\" class=\"analects-tag-cloud\"></div>\n            </div>\n          </div>\n          <div id=\"analects-status\" class=\"analects-status muted\"></div>\n          <div id=\"analects-results\" class=\"analects-results\"></div>\n          <div class=\"analects-loadmore\">\n            <button id=\"analects-load-more-btn\" class=\"analects-btn\">加载更多</button>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  _renderChapterChips(container, chapters) {\n    container.innerHTML = '';\n    // “全部章节”\n    const all = this._chip({ id: 'all', name: '全部章节' }, true, true);\n    container.appendChild(all);\n\n    const setSelected = (chip) => {\n      // 清空所有章节选中\n      container.querySelectorAll('.analects-chip').forEach(el => el.classList.remove('selected'));\n      // 选中当前\n      chip.classList.add('selected');\n      // 更新 selected.chapter\n      this.selected.chapter = { id: chip.dataset.id, name: chip.dataset.name };\n      // 规则：只有在 selected 时，.all-option 才是绿色；否则为白底\n      const allChip = container.querySelector('.analects-chip.all-option');\n      if (allChip) {\n        if (chip === allChip) allChip.classList.add('selected');\n        else allChip.classList.remove('selected');\n      }\n      // 切换筛选时：重置分页与搜索状态，但不触发自动搜索（用户需点“搜索”）\n      this._resetPaging();\n    };\n\n    all.addEventListener('click', () => setSelected(all));\n\n    (chapters || []).forEach(ch => {\n      const chip = this._chip({ id: String(ch.id), name: String(ch.name) }, false, false);\n      chip.addEventListener('click', () => setSelected(chip));\n      container.appendChild(chip);\n    });\n  }\n\n  _renderMultiChips(container, options, storeMap) {\n    container.innerHTML = '';\n    (options || []).forEach(opt => {\n      const chip = this._chip({ id: String(opt.id), name: String(opt.name || opt.title || opt.content || opt.id) }, false, false);\n      chip.addEventListener('click', () => {\n        const id = chip.dataset.id;\n        const name = chip.dataset.name;\n        if (chip.classList.contains('selected')) {\n          chip.classList.remove('selected');\n          storeMap.delete(id);\n        } else {\n          chip.classList.add('selected');\n          storeMap.set(id, name);\n        }\n        this._resetPaging();\n      });\n      container.appendChild(chip);\n    });\n  }\n\n  _chip(opt, selected, isAll) {\n    const chip = document.createElement('label');\n    chip.className = `analects-chip${isAll ? ' all-option' : ''}${selected ? ' selected' : ''}`;\n    chip.dataset.id = String(opt.id);\n    chip.dataset.name = String(opt.name);\n    // 隐藏的单选/复选输入（供无障碍/键盘使用；样式上隐藏小圆圈/方框）\n    chip.innerHTML = `\n      <input type=\"${isAll ? 'radio' : 'checkbox'}\" ${selected ? 'checked' : ''} aria-hidden=\"true\" tabindex=\"-1\">\n      <span>${this._safe(opt.name)}</span>\n    `;\n    return chip;\n  }\n\n  _resetPaging() {\n    this.state.page = 0;\n    this.state.hasMore = false;\n    this.state.totalCount = 0;\n    this.state.didSearch = false; // 防止未点击“搜索”时触发滚动加载\n  }\n\n  async _startSearch(filters, ctx) {\n    // 记录本次搜索 token，避免旧结果插队\n    const token = ++this.state.searchToken;\n    this.state.isLoading = true;\n    this.state.page = 0;\n    this.state.didSearch = true;\n    this.state.currentFilters = { ...filters };\n\n    ctx.statusBar.textContent = '🔍 搜索中...';\n    ctx.results.innerHTML = '<div class=\"analects-loading\">正在搜索...</div>';\n    ctx.loadMoreBtn.disabled = true;\n\n    try {\n      const { data, totalCount, hasMore } = await this.fetchEntries(this.state.currentFilters, 0, this.state.pageSize);\n      if (token !== this.state.searchToken) return; // 已有新搜索触发\n\n      this.state.page = 1;\n      this.state.hasMore = hasMore;\n      this.state.totalCount = totalCount || data.length;\n\n      ctx.results.innerHTML = '';\n      this._renderList(ctx.results, data);\n\n      if (this.state.hasMore) {\n        ctx.statusBar.textContent = `共找到 ${this.state.totalCount} 条结果，滚动或者点击加载更多`;\n      } else {\n        ctx.statusBar.textContent = data.length > 0\n          ? '已加载完毕'\n          : '未找到匹配的结果';\n      }\n\n      ctx.loadMoreBtn.disabled = !this.state.hasMore;\n    } catch (err) {\n      ctx.results.innerHTML = `<div class=\"analects-error\">搜索失败：${err.message}</div>`;\n      ctx.statusBar.textContent = '搜索失败';\n    } finally {\n      this.state.isLoading = false;\n    }\n  }\n\n  async _loadMore(ctx) {\n    if (!this.state.didSearch || this.state.isLoading || !this.state.hasMore) return;\n    const token = this.state.searchToken;\n    this.state.isLoading = true;\n    ctx.loadMoreBtn.disabled = true;\n    ctx.loadMoreBtn.textContent = '加载中...';\n\n    try {\n      const { data, hasMore } = await this.fetchEntries(this.state.currentFilters, this.state.page, this.state.pageSize);\n      if (token !== this.state.searchToken) return;\n      this.state.page += 1;\n      this.state.hasMore = hasMore;\n      this._renderList(ctx.results, data);\n\n      if (this.state.hasMore) {\n        ctx.statusBar.textContent = `共找到 ${this.state.totalCount} 条结果，滚动或者点击加载更多`;\n        ctx.loadMoreBtn.disabled = false;\n        ctx.loadMoreBtn.textContent = '加载更多';\n      } else {\n        ctx.statusBar.textContent = '已加载完毕';\n        ctx.loadMoreBtn.textContent = '已加载完毕';\n      }\n    } catch (err) {\n      // 保持体验\n      ctx.statusBar.textContent = `加载更多失败：${err.message}`;\n      ctx.loadMoreBtn.disabled = false;\n      ctx.loadMoreBtn.textContent = '加载更多';\n    } finally {\n      this.state.isLoading = false;\n    }\n  }\n\n  _renderList(container, items) {\n    const frag = document.createDocumentFragment();\n    (items || []).forEach(e => {\n      const card = document.createElement('div');\n      card.className = 'analects-item';\n      card.innerHTML = `\n        <div class=\"meta\">${this._fmtChapter(e)}</div>\n        <div class=\"text\">${this._safe(e.original_text)}</div>\n        ${e.translation ? `<div class=\"subtext\">${this._safe(e.translation)}</div>` : ''}\n        ${e.annotation ? `<div class=\"subtext muted\">${this._safe(e.annotation)}</div>` : ''}\n      `;\n      frag.appendChild(card);\n    });\n    container.appendChild(frag);\n  }\n}"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_regeneratorDefine","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_toPrimitive","_typeof","toPrimitive","String","Number","AnalectsSDK","config","undefined","supabaseUrl","supabaseKey","apiBaseUrl","concat","headers","state","didSearch","page","pageSize","hasMore","totalCount","isLoading","currentFilters","searchToken","cache","characters","proverbs","chapters","selected","chapter","id","name","Map","_fetch2","_callee","url","res","text","contentRange","total","data","_context","Error","fetch","ok","catch","status","statusText","get","includes","parseInt","split","pop","json","_fetch","_x","_getOptions2","_callee2","endpoint","pick","_yield$this$_fetch","cleaned","_args2","_context2","title","content","Array","isArray","map","filter","x","_getOptions","_x2","getCharacters","getArguments","getProverbs","_getChapters","_callee3","_yield$this$_fetch2","set","_context3","Set","forEach","add","from","getChapters","_buildEntriesUrl","filters","select","encodeURIComponent","conds","keyword","kw","trim","encoded","push","join","_fetchEntries","_callee4","_yield$this$_fetch3","list","allIn","_args4","_context4","selectedIds","entryIds","_toConsumableArray","every","characterIds","ids","entry_characters","character_id","argumentIds","entry_arguments","argument_id","proverbIds","entry_proverbs","proverb_id","toLowerCase","t1","original_text","t2","translation","t3","annotation","fetchEntries","_x3","_renderDailyAnalect","_callee5","container","countUrl","_yield$this$_fetch4","today","dayIndex","_yield$this$_fetch5","item","_t","_context5","innerHTML","Date","Math","floor","UTC","getFullYear","getMonth","getDate","_fmtChapter","_safe","message","renderDailyAnalect","_x4","ch","sec","section_number","replace","s","_renderSearchInterface","_callee9","_this","keywordInput","searchBtn","results","statusBar","loadMoreBtn","chapterCloud","charCloud","argCloud","provCloud","_yield$Promise$all","_yield$Promise$all2","argumentsList","onScroll","_context9","_searchSkeleton","querySelector","textContent","all","_slicedToArray","_renderChapterChips","_renderMultiChips","addEventListener","_callee6","_this$selected$chapte","_context6","_startSearch","keys","_callee7","_context7","_loadMore","_ref3","_callee8","rect","_context8","getBoundingClientRect","top","window","innerHeight","renderSearchInterface","_x5","_this2","_chip","appendChild","setSelected","chip","querySelectorAll","el","classList","remove","dataset","allChip","_resetPaging","options","storeMap","_this3","opt","contains","delete","isAll","document","createElement","className","_startSearch2","_callee0","ctx","token","_yield$this$fetchEntr","_t2","_context0","_objectSpread","disabled","_renderList","_x6","_x7","_loadMore2","_callee1","_yield$this$fetchEntr2","_t3","_context1","_x8","items","_this4","frag","createDocumentFragment","card","default"],"sourceRoot":""}