{"version":3,"file":"analects.min.js","mappings":"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","sources":["webpack://AnalectsSDK/webpack/universalModuleDefinition","webpack://AnalectsSDK/./src/index.js","webpack://AnalectsSDK/webpack/bootstrap","webpack://AnalectsSDK/webpack/runtime/harmony module decorator","webpack://AnalectsSDK/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AnalectsSDK\"] = factory();\n\telse\n\t\troot[\"AnalectsSDK\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","// 引入样式文件\nimport './styles/analects.css';\n\n// 论语 SDK - 优化清理版\nclass AnalectsSDK {\n  constructor(config = {}) {\n    this.supabaseUrl = config.supabaseUrl || 'https://your-project.supabase.co';\n    this.supabaseKey = config.supabaseKey || 'your-anon-key';\n    this.apiBaseUrl = `${this.supabaseUrl}/rest/v1`;\n    this.headers = {\n      'apikey': this.supabaseKey,\n      'Authorization': `Bearer ${this.supabaseKey}`,\n      'Content-Type': 'application/json',\n      'Prefer': 'return=representation'\n    };\n    \n    // 缓存数据\n    this.cache = {\n      characters: null,\n      arguments: null,\n      proverbs: null,\n      chapters: null\n    };\n\n    // 选中项目管理\n    this.selectedItems = {\n      characters: new Map(),\n      arguments: new Map(),\n      proverbs: new Map(),\n      chapter: { id: 'all', name: '全部章节' }\n    };\n\n    // 分页参数\n    this.pagination = {\n      pageSize: 10,\n      currentPage: 0,\n      totalLoaded: 0,\n      isLoading: false,\n      hasMore: true,\n      totalCount: 0,\n      loadedIds: new Set()\n    };\n\n    // 搜索状态管理\n    this.currentFilters = {};\n    this.isSearchInitialized = false;\n    this.scrollListener = null;\n    this.isAutoLoadingEnabled = false;\n    this.searchConditionsChanged = false;\n  }\n\n  // 验证配置\n  validateConfig() {\n    if (!this.supabaseUrl || this.supabaseUrl.includes('your-project')) {\n      throw new Error('请先配置正确的 Supabase URL');\n    }\n    if (!this.supabaseKey || this.supabaseKey.includes('your-anon-key')) {\n      throw new Error('请先配置正确的 Supabase Key');\n    }\n  }\n\n  // API请求方法\n  async apiRequest(endpoint, params = {}) {\n    this.validateConfig();\n  \n    const { count, ...urlParams } = params;\n  \n    let url = `${this.apiBaseUrl}/${endpoint}`;\n    if (Object.keys(urlParams).length > 0) {\n      url += '?' + new URLSearchParams(urlParams).toString();\n    }\n\n    const headers = { ...this.headers };\n  \n    if (count) {\n      const existingPrefer = headers['Prefer'] || '';\n      headers['Prefer'] = existingPrefer \n        ? `${existingPrefer}, count=${count}` \n        : `count=${count}`;\n    }\n\n    const response = await fetch(url, {\n      method: 'GET',\n      headers,\n      mode: 'cors',\n    });\n  \n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API错误详情:', response.status, response.statusText, errorText);\n      throw new Error(`API请求失败: ${response.status} ${response.statusText}`);\n    }\n  \n    const data = await response.json();\n  \n    if (count) {\n      const contentRange = response.headers.get('Content-Range');\n      if (contentRange) {\n        const match = contentRange.match(/\\/(\\d+)$/);\n        if (match) {\n          data.count = parseInt(match[1], 10);\n        }\n      }\n    }\n  \n    return data;\n  }\n\n  // 分页数据获取\n  async fetchAnalects(filters = {}, page = 0, pageSize = 10) {\n    try {\n      const params = this.buildQueryParams(filters, page, pageSize);\n      let data = await this.apiRequest('analects_entries_expanded', params);\n\n      const uniqueData = this.removeDuplicates(data);\n\n      if (page === 0) {\n        this.pagination.totalCount = await this.getTotalCount(filters);\n      }\n\n      const totalLoadedSoFar = page * pageSize + uniqueData.length;\n      const hasMore = totalLoadedSoFar < this.pagination.totalCount;\n\n      return {\n        data: uniqueData,\n        hasMore,\n        total: uniqueData.length,\n        totalCount: this.pagination.totalCount\n      };\n    } catch (error) {\n      console.error('获取论语数据失败:', error);\n      throw error;\n    }\n  }\n\n  // 构建查询参数\n  buildQueryParams(filters, page, pageSize) {\n    const params = {\n      select: `*,entry_characters(character_id,characters(id,name)),entry_arguments(argument_id,arguments(id,title)),entry_proverbs(proverbs(*))`,\n      order: 'id.asc',\n      limit: pageSize,\n      offset: page * pageSize\n    };\n\n    if (filters.chapter && filters.chapter !== 'all' && filters.chapter.trim()) {\n      params.chapter = `eq.${filters.chapter.trim()}`;\n    }\n\n    if (filters.characterIds && filters.characterIds.length > 0) {\n      params.character_ids = `cs.{${filters.characterIds.join(',')}}`;\n    }\n\n    if (filters.argumentIds && filters.argumentIds.length > 0) {\n      params.argument_ids = `cs.{${filters.argumentIds.join(',')}}`;\n    }\n\n    if (filters.proverbIds && filters.proverbIds.length > 0) {\n      params.proverb_ids = `cs.{${filters.proverbIds.join(',')}}`;\n    }\n\n    // 关键字处理 - 多关键字 AND 逻辑\n    if (filters.keyword && filters.keyword.trim()) {\n      const rawKeyword = filters.keyword.trim().replace(/%/g, '');\n      const keywords = rawKeyword.split(/\\s+/).filter(k => k.length > 0);\n\n      if (keywords.length > 0) {\n        const keywordGroups = keywords.map(kw => {\n          const searchFields = [\n            `original_text.ilike.*${kw}*`,\n            `translation.ilike.*${kw}*`,\n            `annotation.ilike.*${kw}*`,\n            `personal_insight.ilike.*${kw}*`\n          ];\n          return `or(${searchFields.join(',')})`;\n        });\n\n        params.and = `(${keywordGroups.join(',')})`;\n      }\n    }\n\n    return params;\n  }\n\n  // 关键字高亮处理\n  highlightKeywords(text, keyword) {\n    if (!text || !keyword) {\n      return this.escapeHtml(text || '');\n    }\n\n    let escapedText = this.escapeHtml(text);\n  \n    const keywords = keyword.trim().split(/\\s+/).filter(k => k.length > 0);\n  \n    if (keywords.length === 0) {\n      return escapedText;\n    }\n\n    keywords.forEach(kw => {\n      if (kw.length > 0) {\n        const escapedKeyword = this.escapeHtml(kw);\n        const regex = new RegExp(`(${this.escapeRegExp(escapedKeyword)})`, 'gi');\n        escapedText = escapedText.replace(regex, '<mark class=\"keyword-highlight\">$1</mark>');\n      }\n    });\n\n    return escapedText;\n  }\n\n  // HTML转义\n  escapeHtml(text) {\n    if (!text) return '';\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  }\n\n  // 正则表达式特殊字符转义\n  escapeRegExp(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n  }\n\n  // 去重处理\n  removeDuplicates(data) {\n    const uniqueData = [];\n    const seenIds = new Set();\n    \n    for (const entry of data) {\n      if (entry.id && !seenIds.has(entry.id)) {\n        seenIds.add(entry.id);\n        uniqueData.push(entry);\n      }\n    }\n    \n    return uniqueData;\n  }\n\n  // 获取总数\n  async getTotalCount(filters) {\n    try {\n      const params = {\n        select: 'id',\n        count: 'exact',\n        limit: 0\n      };\n\n      if (filters.chapter && filters.chapter !== 'all' && filters.chapter.trim()) {\n        params.chapter = `eq.${filters.chapter.trim()}`;\n      }\n\n      if (filters.characterIds && filters.characterIds.length > 0) {\n        params.character_ids = `cs.{${filters.characterIds.join(',')}}`;\n      }\n\n      if (filters.argumentIds && filters.argumentIds.length > 0) {\n        params.argument_ids = `cs.{${filters.argumentIds.join(',')}}`;\n      }\n\n      if (filters.proverbIds && filters.proverbIds.length > 0) {\n        params.proverb_ids = `cs.{${filters.proverbIds.join(',')}}`;\n      }\n\n      if (filters.keyword && filters.keyword.trim()) {\n        const rawKeyword = filters.keyword.trim().replace(/%/g, '');\n        const keywords = rawKeyword.split(/\\s+/).filter(k => k.length > 0);\n\n        if (keywords.length > 0) {\n          const keywordGroups = keywords.map(kw => {\n            const searchFields = [\n              `original_text.ilike.*${kw}*`,\n              `translation.ilike.*${kw}*`,\n              `annotation.ilike.*${kw}*`,\n              `personal_insight.ilike.*${kw}*`\n            ];\n            return `or(${searchFields.join(',')})`;\n          });\n\n          params.and = `(${keywordGroups.join(',')})`;\n        }\n      }\n\n      const result = await this.apiRequest('analects_entries_expanded', params);\n      return result.count || 0;\n    } catch (error) {\n      console.error('获取总数失败:', error);\n      return 0;\n    }\n  }\n\n  // 中文拼音排序\n  sortByPinyin(items, field) {\n    return items.sort((a, b) => {\n      const textA = a[field] || '';\n      const textB = b[field] || '';\n      return textA.localeCompare(textB, 'zh-CN', {\n        numeric: true,\n        sensitivity: 'base'\n      });\n    });\n  }\n  \n  // 章节排序\n  sortChaptersByNumber(chapters) {\n    return chapters.sort((a, b) => {\n      const getChapterNumber = (chapterName) => {\n        const match = chapterName.match(/第([一二三四五六七八九十百千万]+|[0-9]+)/);\n        if (!match) return 0;\n        const numStr = match[1];\n        if (/^\\d+$/.test(numStr)) {\n          return parseInt(numStr, 10);\n        }\n        return this.chineseToNumber(numStr);\n      };\n      return getChapterNumber(a.name || a) - getChapterNumber(b.name || b);\n    });\n  }\n\n  // 中文数字转阿拉伯数字\n  chineseToNumber(chineseNum) {\n    const chineseNumbers = {\n      '零': 0, '一': 1, '二': 2, '三': 3, '四': 4, '五': 5,\n      '六': 6, '七': 7, '八': 8, '九': 9, '十': 10,\n      '百': 100, '千': 1000, '万': 10000\n    };\n  \n    if (chineseNumbers[chineseNum]) {\n      return chineseNumbers[chineseNum];\n    }\n  \n    let result = 0;\n    let temp = 0;\n  \n    if (chineseNum.startsWith('十')) {\n      result = 10;\n      chineseNum = chineseNum.substring(1);\n    }\n  \n    for (let i = 0; i < chineseNum.length; i++) {\n      const char = chineseNum[i];\n      const num = chineseNumbers[char];\n    \n      if (num < 10) {\n        temp = num;\n      } else if (num === 10) {\n        if (temp === 0) temp = 1;\n        result += temp * 10;\n        temp = 0;\n      } else if (num === 100) {\n        if (temp === 0) temp = 1;\n        result += temp * 100;\n        temp = 0;\n      } else if (num === 1000) {\n        if (temp === 0) temp = 1;\n        result += temp * 1000;\n        temp = 0;\n      } else if (num === 10000) {\n        if (temp === 0) temp = 1;\n        result = (result + temp) * 10000;\n        temp = 0;\n      }\n    }\n  \n    result += temp;\n    return result;\n  }\n\n  // 获取数据\n  async getData(type) {\n    if (this.cache[type]) {\n      return this.cache[type];\n    }\n\n    const endpoints = {\n      characters: 'characters?order=name.asc',\n      arguments: 'arguments?order=title.asc',\n      proverbs: 'proverbs?order=content.asc',\n      chapters: 'analects_entries?select=chapter&order=chapter.asc'\n    };\n\n    try {\n      let data = await this.apiRequest(endpoints[type].split('?')[0], \n        Object.fromEntries(new URLSearchParams(endpoints[type].split('?')[1] || '')));\n    \n      if (type === 'chapters') {\n        const uniqueChapters = [...new Set(data.map(item => item.chapter))]\n          .filter(chapter => chapter && typeof chapter === 'string' && chapter.trim())\n          .map(chapter => ({ id: chapter, name: chapter }));\n        data = this.sortChaptersByNumber(uniqueChapters);\n      } else {\n        const sortField = type === 'characters' ? 'name' : \n                         type === 'arguments' ? 'title' : \n                         type === 'proverbs' ? 'content' : null;\n        if (sortField) {\n          data = this.sortByPinyin(data, sortField);\n        }\n      }\n\n      this.cache[type] = data;\n      return data;\n    } catch (error) {\n      console.error(`获取${type}列表失败:`, error);\n      if (error.message === 'Failed to fetch') {\n        throw new Error('网络连接失败，请检查 Supabase 配置和网络连接');\n      }\n      throw error;\n    }\n  }\n\n  // 便捷方法\n  async getCharacters() { return this.getData('characters'); }\n  async getArguments() { return this.getData('arguments'); }\n  async getProverbs() { return this.getData('proverbs'); }\n  async getChapters() { return this.getData('chapters'); }\n\n  // 获取每日论语\n  async getDailyAnalect() {\n    try {\n      const data = await this.apiRequest('analects_entries_expanded', {\n        select: 'chapter,section_number,original_text,translation',\n        'show_in_daily': 'eq.true'\n      });\n\n      if (data.length === 0) return null;\n      const randomIndex = Math.floor(Math.random() * data.length);\n      return data[randomIndex];\n    } catch (error) {\n      console.error('获取每日论语失败:', error);\n      throw error;\n    }\n  }\n\n  // 高级搜索\n  async advancedSearch(filters = {}) {\n    const result = await this.fetchAnalects(filters, 0, 1000);\n    return result.data;\n  }\n\n  // 格式化日期\n  formatDate(date = new Date()) {\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    const weekdays = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'];\n    const weekday = weekdays[date.getDay()];\n    \n    return {\n      full: `${year}年${month}月${day}日`,\n      weekday: weekday,\n      iso: date.toISOString().split('T')[0]\n    };\n  }\n\n  // 生成分享链接\n  generateShareLinks(entry, currentUrl = window.location.href) {\n    const text = `每日论语：${entry.original_text}`;\n    const url = currentUrl;\n    \n    return {\n      twitter: `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}&url=${encodeURIComponent(url)}`,\n      facebook: `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`,\n      copy: text + ' - ' + url,\n      email: `mailto:?subject=${encodeURIComponent('每日论语分享')}&body=${encodeURIComponent(text + ' - ' + url)}`\n    };\n  }\n\n  // 复制到剪贴板\n  async copyToClipboard(text) {\n    try {\n      if (navigator.clipboard) {\n        await navigator.clipboard.writeText(text);\n        return true;\n      } else {\n        const textArea = document.createElement('textarea');\n        textArea.value = text;\n        Object.assign(textArea.style, {\n          position: 'fixed',\n          left: '-999999px',\n          top: '-999999px'\n        });\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        const successful = document.execCommand('copy');\n        document.body.removeChild(textArea);\n        return successful;\n      }\n    } catch (err) {\n      console.error('复制失败:', err);\n      return false;\n    }\n  }\n\n  // 渲染论语卡片\n  renderAnalectCard(entry, container) {\n    if (!container) {\n      console.error('未找到容器元素');\n      return;\n    }\n\n    const card = document.createElement('div');\n    card.className = 'analects-result-card';\n    card.innerHTML = this.generateResultCardHTML(entry);\n    \n    container.appendChild(card);\n    \n    setTimeout(() => card.classList.add('animate-in'), 10);\n  }\n\n  // 生成结果卡片HTML\n  generateResultCardHTML(entry) {\n    const currentKeyword = this.currentFilters?.keyword || '';\n  \n    const getRelatedData = (items, field) => \n      (items || []).map(item => item[field]?.name || item[field]?.title || item[field]?.content).filter(Boolean);\n  \n    const characters = getRelatedData(entry.entry_characters, 'characters');\n    const argumentsList = getRelatedData(entry.entry_arguments, 'arguments');\n    const proverbs = getRelatedData(entry.entry_proverbs, 'proverbs');\n\n    const createTagGroup = (label, items, className) => \n      items.length > 0 ? `\n        <div class=\"analects-result-tag-group\">\n          <span class=\"analects-result-tag-label\">${label}:</span>\n          ${items.map(item => `<span class=\"analects-result-tag ${className}\">${this.escapeHtml(item)}</span>`).join('')}\n        </div>\n      ` : '';\n\n    const highlightedOriginal = this.highlightKeywords(entry.original_text, currentKeyword);\n    const highlightedTranslation = entry.translation ? this.highlightKeywords(entry.translation, currentKeyword) : '';\n    const highlightedAnnotation = entry.annotation ? this.highlightKeywords(entry.annotation, currentKeyword) : '';\n\n    return `\n      <div class=\"analects-result-header\">\n        <span class=\"analects-result-chapter\">${this.escapeHtml(entry.chapter || '')}</span>\n        <span class=\"analects-result-section\">第${this.escapeHtml(entry.section_number || '')}节</span>\n      </div>\n    \n      <div class=\"analects-result-content\">\n        <div class=\"analects-result-original\">${highlightedOriginal}</div>\n        ${highlightedTranslation ? `<div class=\"analects-result-translation\">${highlightedTranslation}</div>` : ''}\n        ${highlightedAnnotation ? `<div class=\"analects-result-annotation\">${highlightedAnnotation}</div>` : ''}\n      </div>\n\n      <div class=\"analects-result-tags\">\n        ${createTagGroup('人物', characters, 'character')}\n        ${createTagGroup('论点', argumentsList, 'argument')}\n        ${createTagGroup('谚语', proverbs, 'proverb')}\n      </div>\n    `;\n  }\n  \n  // 渲染搜索界面\n  renderSearchInterface(container) {\n    if (!container) {\n      console.error('未找到容器元素');\n      return;\n    }\n\n    container.innerHTML = this.getSearchInterfaceHTML();\n    this.initializeSearchEvents();\n    this.loadSearchOptions();\n    this.initializeScrollFeatures();\n    this.isSearchInitialized = true;\n  }\n\n  // 获取搜索界面HTML\n  getSearchInterfaceHTML() {\n    return `\n      <div class=\"analects-search\">\n        <div class=\"analects-search-header\">\n          <h1 class=\"analects-search-title\">论语搜索</h1>\n          <p class=\"analects-search-subtitle\">Search in the Analects of Confucius</p>\n        </div>\n\n        <div class=\"analects-search-form\">\n          <div class=\"analects-keyword-section\">\n            <label class=\"analects-keyword-label\" for=\"analects-keyword\">🔍 关键词搜索</label>\n            <input type=\"text\" id=\"analects-keyword\" class=\"analects-input\" \n                   placeholder=\"输入关键词搜索论语原文、翻译或注释... 按回车或点击开始搜索\">\n            \n            <div class=\"analects-selected-items\" id=\"selected-items-container\" style=\"display: none;\">\n              <h4>已选择的搜索条件</h4>\n              <div class=\"analects-selected-tags\" id=\"selected-tags-container\">\n                <div class=\"analects-selected-empty\">暂无选择的搜索条件</div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"analects-advanced-filters\">\n            <h3 class=\"analects-advanced-title\">高级搜索</h3>\n            \n            ${this.createSearchSection('chapter', '章节', 'single-column')}\n            \n            <div class=\"analects-filters-grid\">\n              ${this.createSearchSection('character', '人物')}\n              ${this.createSearchSection('argument', '论点')}\n            </div>\n\n            <div class=\"analects-filters-grid\" style=\"margin-top: 24px;\">\n              ${this.createSearchSection('proverb', '谚语', 'full-width')}\n            </div>\n          </div>\n\n          <div class=\"analects-search-actions\">\n            <button id=\"analects-search-btn\" class=\"analects-btn\">🔍 开始搜索</button>\n            <button id=\"analects-reset-btn\" class=\"analects-btn analects-btn-clear\">🔄 重置搜索</button>\n          </div>\n        </div>\n        \n        <div id=\"analects-search-status\" class=\"analects-search-status\"></div>\n\n        <div class=\"analects-results\">\n          <div id=\"analects-results-container\" class=\"analects-results-container\"></div>\n          <div id=\"analects-loading-more\" style=\"display:none; text-align:center; margin:10px; color:#666;\">\n            加载中...\n          </div>\n          <div id=\"analects-load-complete\" style=\"display:none; text-align:center; margin:20px; color:#888;\">\n            —— ✨ 已全部显示完毕 ✨ ——\n          </div>\n        </div>\n\n        <div id=\"scroll-to-top\" class=\"analects-scroll-indicator\">↑</div>\n      </div>\n    `;\n  }\n\n  // 创建搜索区域HTML\n  createSearchSection(type, title, className = '') {\n    const types = {\n      chapter: 'chapters',\n      character: 'characters', \n      argument: 'arguments',\n      proverb: 'proverbs'\n    };\n    \n    const containerClass = className === 'single-column' ? 'analects-filters-grid single-column' : \n                          className === 'full-width' ? 'analects-filter-section' : \n                          'analects-filter-section';\n    const wrapperStyle = className === 'full-width' ? 'style=\"grid-column: 1 / -1;\"' : '';\n\n    return `\n      <div class=\"${containerClass}\" ${wrapperStyle}>\n        <div class=\"analects-filter-section\">\n          <div class=\"analects-filter-header\">\n            <h4 class=\"analects-filter-title ${types[type]}\">${title}</h4>\n            <span class=\"analects-filter-count\" id=\"${type}-count\">0</span>\n          </div>\n          <div class=\"analects-filter-search\">\n            <input type=\"text\" id=\"${type}-search\" placeholder=\"搜索${title.replace('搜索', '')}...\">\n          </div>\n          <div id=\"${type}-filters\" class=\"analects-filter-options\">\n            <div class=\"analects-loading\">加载中...</div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  // 渲染每日论语组件\n  renderDailyAnalect(container) {\n    if (!container) {\n      console.error('未找到容器元素');\n      return;\n    }\n\n    container.innerHTML = '<div class=\"analects-loading\">加载每日论语...</div>';\n\n    this.getDailyAnalect().then(entry => {\n      if (!entry) {\n        container.innerHTML = '<div class=\"analects-daily-empty\">暂无每日论语</div>';\n        return;\n      }\n\n      const dateInfo = this.formatDate();\n      const shareLinks = this.generateShareLinks(entry);\n\n      container.innerHTML = this.getDailyAnalectHTML(entry, dateInfo, shareLinks);\n    }).catch(error => {\n      console.error('渲染每日论语失败:', error);\n      container.innerHTML = '<div class=\"analects-daily-error\">加载每日论语失败，请检查配置</div>';\n    });\n  }\n\n  // 获取每日论语HTML\n  getDailyAnalectHTML(entry, dateInfo, shareLinks) {\n    return `\n      <div class=\"analects-daily\">\n        <div class=\"analects-daily-header\">\n          <h1 class=\"analects-daily-title\">每日论语</h1>\n          <p class=\"analects-daily-subtitle\">Daily Analects of Confucius</p>\n          <div class=\"analects-daily-date\">${dateInfo.full} · ${dateInfo.weekday}</div>\n        </div>\n\n        <div class=\"analects-daily-card\">\n          <div class=\"analects-daily-original\">${entry.original_text}</div>\n          ${entry.translation ? `<div class=\"analects-daily-translation\">${entry.translation}</div>` : ''}\n          <div class=\"analects-daily-reference\">${entry.chapter} · 第${entry.section_number || ''}节</div>\n        </div>\n\n        <div class=\"analects-daily-share\">\n          <span class=\"analects-daily-share-label\">分享：</span>\n          <div class=\"analects-share-buttons\">\n            ${this.createShareButton('twitter', shareLinks.twitter, '分享到 Twitter')}\n            ${this.createShareButton('facebook', shareLinks.facebook, '分享到 Facebook', true)}\n            ${this.createShareButton('copy', null, '复制分享内容', false, shareLinks.copy)}\n            ${this.createShareButton('email', shareLinks.email, '通过邮件分享')}\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  // 创建分享按钮\n  createShareButton(type, href, title, popup = false, copyText = null) {\n    const icons = {\n      twitter: '<path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"/>',\n      facebook: '<path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"/>',\n      copy: '<path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"/>',\n      email: '<path d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"/>'\n    };\n\n    if (type === 'copy') {\n      return `\n        <button class=\"analects-share-btn copy\" \n                onclick=\"window.AnalectsSDK.copyText('${copyText.replace(/'/g, \"\\\\'\")}', this)\"\n                title=\"${title}\">\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">${icons[type]}</svg>\n        </button>\n      `;\n    }\n\n    const popupHandler = popup ? `onclick=\"return window.open(this.href, '${type}-share', 'width=626,height=436,toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes')\"` : '';\n\n    return `\n      <a href=\"${href}\" class=\"analects-share-btn ${type}\" target=\"_blank\" rel=\"noopener noreferrer\" \n         ${popupHandler} title=\"${title}\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">${icons[type]}</svg>\n      </a>\n    `;\n  }\n\n  // 初始化搜索事件\n  initializeSearchEvents() {\n    const eventMap = {\n      'analects-search-btn': () => this.performSearch(),\n      'analects-reset-btn': () => this.resetSearch()\n    };\n\n    Object.entries(eventMap).forEach(([id, handler]) => {\n      const element = document.getElementById(id);\n      if (element) element.addEventListener('click', handler);\n    });\n\n    // 回车键搜索\n    const keywordInput = document.getElementById('analects-keyword');\n    if (keywordInput) {\n      keywordInput.addEventListener('keypress', (e) => {\n        if (e.key === 'Enter') this.performSearch();\n      });\n      \n      keywordInput.addEventListener('input', () => {\n        this.markSearchConditionsChanged();\n      });\n    }\n\n    // 实时搜索过滤器\n    ['character', 'argument', 'proverb', 'chapter'].forEach(type => {\n      const searchInput = document.getElementById(`${type}-search`);\n      if (searchInput) {\n        searchInput.addEventListener('input', (e) => {\n          this.filterOptions(type, e.target.value);\n        });\n      }\n    });\n  }\n\n  // 标记搜索条件已改变\n  markSearchConditionsChanged() {\n    this.searchConditionsChanged = true;\n    const searchBtn = document.getElementById('analects-search-btn');\n    if (searchBtn && this.searchConditionsChanged) {\n      searchBtn.classList.add('search-changed');\n    }\n  }\n\n  // 初始化滚动功能\n  initializeScrollFeatures() {\n    const scrollToTopBtn = document.getElementById('scroll-to-top');\n    \n    if (scrollToTopBtn) {\n      scrollToTopBtn.addEventListener('click', () => {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      });\n\n      window.addEventListener('scroll', () => {\n        scrollToTopBtn.classList.toggle('visible', window.scrollY > 300);\n      });\n    }\n\n    this.setupAutoLoad();\n  }\n\n  // 设置自动加载功能\n  setupAutoLoad() {\n      // 如果之前存在监听器，先从 window 移除\n      if (this.scrollListener) {\n          window.removeEventListener('scroll', this.scrollListener);\n      }\n\n      this.scrollListener = () => {\n          // 检查是否应该加载\n          if (!this.isAutoLoadingEnabled || \n              this.pagination.isLoading || \n              !this.pagination.hasMore ||\n              this.pagination.totalLoaded === 0) {\n              return;\n          }\n\n          // 获取结果容器元素\n          const resultsContainer = document.getElementById('analects-results-container');\n          if (!resultsContainer) {\n              return; // 如果容器不存在，则不执行任何操作\n          }\n\n          // 关键修改：检查 resultsContainer 元素的位置\n          const rect = resultsContainer.getBoundingClientRect();\n        \n          // 当结果容器的底部进入视口，并且距离视口底部小于等于 200px 时，加载更多\n          // rect.bottom 是容器底部相对于视口顶部的距离\n          // window.innerHeight 是视口的高度\n          if (rect.bottom <= window.innerHeight + 200) {\n              this.loadMoreResults();\n          }\n      };\n\n      // 监听器仍然绑定在 window 对象上\n      window.addEventListener('scroll', this.scrollListener, { passive: true });\n  }\n\n  // 加载搜索选项\n  async loadSearchOptions() {\n    try {\n      const statusDiv = document.getElementById('analects-search-status');\n      if (statusDiv) {\n        statusDiv.innerHTML = '<div class=\"analects-info\">📄 加载搜索选项...</div>';\n      }\n\n      const [characters, argumentsList, proverbs, chapters] = await Promise.all([\n        this.getCharacters(),\n        this.getArguments(),\n        this.getProverbs(),\n        this.getChapters()\n      ]);\n\n      const searchData = { character: characters, argument: argumentsList, proverb: proverbs, chapter: chapters };\n      \n      Object.entries(searchData).forEach(([type, data]) => {\n        this.updateSearchCount(type, data.length);\n        this.renderSearchOptions(`${type}-filters`, data, type);\n      });\n      \n      if (statusDiv) {\n        statusDiv.innerHTML = '<div class=\"analects-success\">✅ 搜索选项加载完成</div>';\n        setTimeout(() => statusDiv.innerHTML = '', 2000);\n      }\n    } catch (error) {\n      console.error('加载搜索选项失败:', error);\n      this.showSearchLoadError(error);\n    }\n  }\n\n  // 显示搜索加载错误\n  showSearchLoadError(error) {\n    const statusDiv = document.getElementById('analects-search-status');\n    if (statusDiv) {\n      statusDiv.innerHTML = '<div class=\"analects-error\">❌ 加载搜索选项失败，请检查配置</div>';\n    }\n    \n    ['character', 'argument', 'proverb', 'chapter'].forEach(type => {\n      const container = document.getElementById(`${type}-filters`);\n      if (container) {\n        container.innerHTML = '<div class=\"analects-no-options\">数据加载失败</div>';\n      }\n    });\n  }\n\n  // 更新搜索计数\n  updateSearchCount(type, count) {\n    const countElement = document.getElementById(`${type}-count`);\n    if (countElement) {\n      countElement.textContent = count;\n    }\n  }\n\n  // 渲染搜索选项\n  renderSearchOptions(containerId, options, type) {\n    const container = document.getElementById(containerId);\n    if (!container || !Array.isArray(options)) {\n      console.error('渲染搜索选项失败:', { containerId, options, type });\n      if (container) {\n        container.innerHTML = '<div class=\"analects-no-options\">数据格式错误</div>';\n      }\n      return;\n    }\n\n    if (options.length === 0) {\n      container.innerHTML = '<div class=\"analects-no-options\">暂无选项</div>';\n      return;\n    }\n\n    const tagCloud = document.createElement('div');\n    tagCloud.className = 'analects-tag-cloud';\n    tagCloud.setAttribute('data-type', type);\n\n    // 为章节添加\"全部\"选项\n    if (type === 'chapter') {\n      const allTag = this.createOptionTag('all', '全部章节', type, true);\n      tagCloud.appendChild(allTag);\n      this.selectedItems.chapter = { id: 'all', name: '全部章节' };\n    }\n\n    options.forEach(option => {\n      if (!option || (!option.id && option.id !== 0)) {\n        console.warn('选项缺少id:', option);\n        return;\n      }\n\n      const displayName = option.name || option.title || option.content || `选项${option.id}`;\n      const tag = this.createOptionTag(option.id, displayName, type, false);\n      tagCloud.appendChild(tag);\n    });\n\n    container.innerHTML = '';\n    container.appendChild(tagCloud);\n  }\n\n  // 创建选项标签\n  createOptionTag(id, displayName, type, isSelected = false) {\n    const tag = document.createElement('label');\n    tag.className = `analects-option-tag ${isSelected ? 'selected' : ''}`;\n    tag.setAttribute('data-id', id);\n    tag.setAttribute('data-name', displayName.toLowerCase());\n    \n    tag.innerHTML = `\n      <input type=\"checkbox\" value=\"${id}\" data-type=\"${type}\" ${isSelected ? 'checked' : ''}>\n      <span>${displayName}</span>\n    `;\n\n    tag.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      this.handleOptionClick(tag, type, id, displayName);\n    });\n\n    return tag;\n  }\n\n  // 处理选项点击\n  handleOptionClick(tag, type, id, displayName) {\n    const checkbox = tag.querySelector('input[type=\"checkbox\"]');\n    const tagCloud = tag.closest('.analects-tag-cloud');\n    \n    if (type === 'chapter') {\n      // 章节单选逻辑\n      tagCloud.querySelectorAll('input[type=\"checkbox\"]').forEach(cb => {\n        cb.checked = false;\n        cb.closest('.analects-option-tag').classList.remove('selected');\n      });\n      \n      checkbox.checked = true;\n      tag.classList.add('selected');\n      this.selectedItems.chapter = { id, name: displayName };\n    } else {\n      // 其他类型多选逻辑\n      const wasChecked = checkbox.checked;\n      checkbox.checked = !wasChecked;\n      tag.classList.toggle('selected', checkbox.checked);\n      \n      if (checkbox.checked) {\n        this.addSelectedItem(type, id, displayName);\n      } else {\n        this.removeSelectedItem(type, id);\n      }\n    }\n    \n    this.markSearchConditionsChanged();\n    this.renderSelectedItems();\n  }\n\n  // 选中项目管理方法\n  addSelectedItem(type, id, name) {\n    const key = type + 's';\n    this.selectedItems[key].set(parseInt(id), name);\n  }\n\n  removeSelectedItem(type, id) {\n    const key = type + 's';\n    this.selectedItems[key].delete(parseInt(id));\n  }\n\n  // 渲染已选择的项目\n  renderSelectedItems() {\n    const selectedContainer = document.getElementById('selected-items-container');\n    const tagsContainer = document.getElementById('selected-tags-container');\n    \n    if (!selectedContainer || !tagsContainer) return;\n\n    const totalSelected = this.selectedItems.characters.size + \n                         this.selectedItems.arguments.size + \n                         this.selectedItems.proverbs.size +\n                         (this.selectedItems.chapter && this.selectedItems.chapter.id !== 'all' ? 1 : 0);\n\n    if (totalSelected === 0) {\n      selectedContainer.style.display = 'none';\n      return;\n    }\n\n    selectedContainer.style.display = 'block';\n    tagsContainer.innerHTML = '';\n\n    // 渲染章节标签（仅当不是\"全部\"时）\n    if (this.selectedItems.chapter && this.selectedItems.chapter.id !== 'all') {\n      const tag = this.createSelectedTag('chapter', this.selectedItems.chapter.id, this.selectedItems.chapter.name);\n      tagsContainer.appendChild(tag);\n    }\n\n    // 渲染其他类型的标签\n    ['characters', 'arguments', 'proverbs'].forEach(type => {\n      this.selectedItems[type].forEach((name, id) => {\n        const tag = this.createSelectedTag(type.slice(0, -1), id, name);\n        tagsContainer.appendChild(tag);\n      });\n    });\n  }\n\n  // 创建已选择的标签\n  createSelectedTag(type, id, name) {\n    const tag = document.createElement('div');\n    tag.className = `analects-selected-tag ${type}`;\n    tag.innerHTML = `\n      <span>${name}</span>\n      <span class=\"remove-tag\" data-type=\"${type}\" data-id=\"${id}\">×</span>\n    `;\n\n    tag.querySelector('.remove-tag').addEventListener('click', (e) => {\n      e.stopPropagation();\n      this.removeSelectedItemById(type, id);\n    });\n\n    return tag;\n  }\n\n  // 通过ID移除选中项目\n  removeSelectedItemById(type, id) {\n    if (type === 'chapter') {\n      this.selectedItems.chapter = { id: 'all', name: '全部章节' };\n      \n      const allCheckbox = document.querySelector('input[data-type=\"chapter\"][value=\"all\"]');\n      const currentCheckbox = document.querySelector(`input[data-type=\"chapter\"][value=\"${id}\"]`);\n      \n      if (allCheckbox) {\n        allCheckbox.checked = true;\n        allCheckbox.closest('.analects-option-tag').classList.add('selected');\n      }\n      \n      if (currentCheckbox) {\n        currentCheckbox.checked = false;\n        currentCheckbox.closest('.analects-option-tag').classList.remove('selected');\n      }\n    } else {\n      this.removeSelectedItem(type, id);\n      \n      const checkbox = document.querySelector(`input[data-type=\"${type}\"][value=\"${id}\"]`);\n      if (checkbox) {\n        checkbox.checked = false;\n        const tag = checkbox.closest('.analects-option-tag');\n        if (tag) {\n          tag.classList.remove('selected');\n        }\n      }\n    }\n    \n    this.markSearchConditionsChanged();\n    this.renderSelectedItems();\n  }\n\n  // 过滤选项\n  filterOptions(type, searchTerm) {\n    const container = document.getElementById(`${type}-filters`);\n    if (!container) return;\n\n    const tags = container.querySelectorAll('.analects-option-tag');\n    const term = searchTerm.toLowerCase().trim();\n\n    let visibleCount = 0;\n    tags.forEach(tag => {\n      const name = tag.getAttribute('data-name');\n      const shouldShow = !term || name.includes(term);\n      \n      tag.style.display = shouldShow ? 'inline-flex' : 'none';\n      if (shouldShow) visibleCount++;\n    });\n\n    const countElement = document.getElementById(`${type}-count`);\n    if (countElement) {\n      const totalCount = tags.length;\n      countElement.textContent = term ? `${visibleCount}/${totalCount}` : totalCount;\n    }\n  }\n\n  // 执行搜索\n  async performSearch() {\n    if (!this.isSearchInitialized) return;\n\n    const keyword = document.getElementById('analects-keyword')?.value;\n    const resultsContainer = document.getElementById('analects-results-container');\n    const statusDiv = document.getElementById('analects-search-status');\n    const loadCompleteDiv = document.getElementById('analects-load-complete');\n    const loadingMoreDiv = document.getElementById('analects-loading-more');\n  \n    if (!resultsContainer) return;\n\n    const selectedCharacters = Array.from(this.selectedItems.characters.keys());\n    const selectedArguments = Array.from(this.selectedItems.arguments.keys());\n    const selectedProverbs = Array.from(this.selectedItems.proverbs.keys());\n    const selectedChapter = this.selectedItems.chapter?.id === 'all' ? 'all' : this.selectedItems.chapter?.id || 'all';\n\n    this.currentFilters = {\n      keyword: keyword?.trim(),\n      characterIds: selectedCharacters,\n      argumentIds: selectedArguments,\n      proverbIds: selectedProverbs,\n      chapter: selectedChapter\n    };\n\n    this.resetPagination();\n    this.searchConditionsChanged = false;\n    this.isAutoLoadingEnabled = false;\n\n    const searchBtn = document.getElementById('analects-search-btn');\n    if (searchBtn) {\n      searchBtn.classList.remove('search-changed');\n    }\n\n    if (loadCompleteDiv) loadCompleteDiv.style.display = 'none';\n    if (loadingMoreDiv) loadingMoreDiv.style.display = 'none';\n    if (statusDiv) statusDiv.innerHTML = '<div class=\"analects-info\">🔍 搜索中...</div>';\n    resultsContainer.innerHTML = '';\n\n    try {\n      const result = await this.fetchAnalects(this.currentFilters, 0, this.pagination.pageSize);\n      this.isAutoLoadingEnabled = true;\n      this.handleFirstSearchResult(result, statusDiv, resultsContainer);\n    } catch (error) {\n      console.error('搜索失败:', error);\n      this.handleSearchError(error, statusDiv, resultsContainer);\n    }\n  }\n\n  // 处理首次搜索结果\n  async handleFirstSearchResult(result, statusDiv, resultsContainer) {\n    if (result.data.length === 0) {\n      if (statusDiv) {\n        statusDiv.innerHTML = '<div class=\"analects-warning\">⚠️ 未找到匹配的章节</div>';\n      }\n      this.isAutoLoadingEnabled = false;\n      return;\n    }\n\n    const uniqueResults = result.data.filter(entry => {\n      if (!entry.id || this.pagination.loadedIds.has(entry.id)) {\n        return false;\n      }\n      this.pagination.loadedIds.add(entry.id);\n      return true;\n    });\n\n    this.pagination.currentPage = 1;\n    this.pagination.totalLoaded = uniqueResults.length;\n    this.pagination.hasMore = this.pagination.totalLoaded < this.pagination.totalCount;\n\n    if (statusDiv) {\n      const totalCount = this.pagination.totalCount > 0 ? this.pagination.totalCount : uniqueResults.length;\n    \n      if (this.pagination.hasMore) {\n        statusDiv.innerHTML = `<div class=\"analects-success\">✅ 找到 ${totalCount} 条结果，每次加载 ${this.pagination.pageSize} 条，滚动自动加载更多</div>`;\n      } else {\n        statusDiv.innerHTML = `<div class=\"analects-success\">✅ 已找到全部 ${totalCount} 条结果</div>`;\n        const loadCompleteDiv = document.getElementById('analects-load-complete');\n        if (loadCompleteDiv) {\n          loadCompleteDiv.style.display = 'block';\n        }\n      }\n    }\n\n    uniqueResults.forEach((entry, index) => {\n      setTimeout(() => {\n        this.renderAnalectCard(entry, resultsContainer);\n      }, index * 50);\n    });\n  }\n  \n  // 重置分页参数\n  resetPagination() {\n    Object.assign(this.pagination, {\n      currentPage: 0,\n      totalLoaded: 0,\n      hasMore: true,\n      isLoading: false,\n      totalCount: 0\n    });\n    this.pagination.loadedIds.clear();\n  }\n\n  // 处理搜索错误\n  handleSearchError(error, statusDiv, resultsContainer) {\n    if (statusDiv) {\n      statusDiv.innerHTML = `<div class=\"analects-error\">❌ 搜索失败：${error.message}</div>`;\n    }\n    resultsContainer.innerHTML = `\n      <div class=\"analects-error\">\n        <h3>搜索失败</h3>\n        <p>${error.message}</p>\n        <p style=\"font-size: 14px; color: #666; margin-top: 12px;\">\n          请检查Supabase配置是否正确，或查看控制台了解详细错误信息。\n        </p>\n      </div>\n    `;\n    this.isAutoLoadingEnabled = false;\n  }\n\n  // 滚动加载更多\n  async loadMoreResults() {\n    if (this.pagination.isLoading || !this.pagination.hasMore || !this.isAutoLoadingEnabled) {\n      return;\n    }\n\n    this.pagination.isLoading = true;\n  \n    const loadingMoreDiv = document.getElementById('analects-loading-more');\n    if (loadingMoreDiv) loadingMoreDiv.style.display = 'block';\n\n    try {\n      const result = await this.fetchAnalects(\n        this.currentFilters, \n        this.pagination.currentPage, \n        this.pagination.pageSize\n      );\n\n      const uniqueResults = result.data.filter(entry => {\n        if (!entry.id || this.pagination.loadedIds.has(entry.id)) {\n          return false;\n        }\n        this.pagination.loadedIds.add(entry.id);\n        return true;\n      });\n\n      const resultsContainer = document.getElementById('analects-results-container');\n      uniqueResults.forEach((entry, index) => {\n        setTimeout(() => {\n          this.renderAnalectCard(entry, resultsContainer);\n        }, index * 50);\n      });\n\n      this.pagination.currentPage++;\n      this.pagination.totalLoaded += uniqueResults.length;\n      this.pagination.hasMore = this.pagination.totalLoaded < this.pagination.totalCount;\n\n      this.updateScrollStatus();\n\n    } catch (error) {\n      console.error('加载更多结果失败:', error);\n      const statusDiv = document.getElementById('analects-search-status');\n      if (statusDiv) {\n        statusDiv.innerHTML = '<div class=\"analects-error\">❌ 加载更多结果失败，请稍后重试</div>';\n      }\n    } finally {\n      this.pagination.isLoading = false;\n      if (loadingMoreDiv) loadingMoreDiv.style.display = 'none';\n    }\n  }\n\n  // 滚动加载时的状态更新\n  updateScrollStatus() {\n    const statusDiv = document.getElementById('analects-search-status');\n    const loadCompleteDiv = document.getElementById('analects-load-complete');\n  \n    if (!statusDiv || this.pagination.totalLoaded === 0) return;\n\n    const displayedCount = this.pagination.totalLoaded;\n    const totalCount = this.pagination.totalCount;\n\n    if (this.pagination.hasMore) {\n      statusDiv.innerHTML = `\n        <div class=\"analects-success\">\n          ✅ 找到 ${totalCount} 条结果，已显示 ${displayedCount} 条，滚动自动加载更多\n        </div>`;\n    } else {\n      statusDiv.innerHTML = `\n        <div class=\"analects-success\">\n          ✅ 共找到 ${totalCount} 条结果，已全部显示完毕\n        </div>`;\n      this.isAutoLoadingEnabled = false;\n      if (loadCompleteDiv) {\n        loadCompleteDiv.style.display = 'block';\n      }\n    }\n  }\n  \n  // 重置所有搜索内容\n  resetSearch() {\n    // 清空关键词\n    const keywordInput = document.getElementById('analects-keyword');\n    if (keywordInput) keywordInput.value = '';\n\n    // 清空搜索框\n    ['character-search', 'argument-search', 'proverb-search', 'chapter-search'].forEach(id => {\n      const input = document.getElementById(id);\n      if (input) {\n        input.value = '';\n        this.filterOptions(id.split('-')[0], '');\n      }\n    });\n\n    // 取消所有选中状态\n    const checkboxes = document.querySelectorAll('.analects-tag-cloud input[type=\"checkbox\"]');\n    const tags = document.querySelectorAll('.analects-option-tag');\n    \n    checkboxes.forEach(cb => cb.checked = false);\n    tags.forEach(tag => tag.classList.remove('selected'));\n\n    // 章节重置为\"全部\"\n    const allCheckbox = document.querySelector('input[data-type=\"chapter\"][value=\"all\"]');\n    if (allCheckbox) {\n      allCheckbox.checked = true;\n      allCheckbox.closest('.analects-option-tag').classList.add('selected');\n    }\n\n    // 清空内部选中项目存储\n    this.selectedItems.characters.clear();\n    this.selectedItems.arguments.clear();\n    this.selectedItems.proverbs.clear();\n    this.selectedItems.chapter = { id: 'all', name: '全部章节' };\n\n    // 清空结果\n    const resultsContainer = document.getElementById('analects-results-container');\n    const loadCompleteDiv = document.getElementById('analects-load-complete');\n    \n    if (resultsContainer) resultsContainer.innerHTML = '';\n    if (loadCompleteDiv) loadCompleteDiv.style.display = 'none';\n\n    // 重置分页和状态\n    this.resetPagination();\n    this.isAutoLoadingEnabled = false;\n    this.searchConditionsChanged = false;\n\n    // 清除搜索按钮的视觉提示\n    const searchBtn = document.getElementById('analects-search-btn');\n    if (searchBtn) {\n      searchBtn.classList.remove('search-changed');\n    }\n\n    // 更新渲染\n    this.renderSelectedItems();\n    this.showStatusMessage('🔄 已重置所有搜索条件', 'success');\n  }\n\n  // 显示状态消息\n  showStatusMessage(message, type = 'info', duration = 2000) {\n    const statusDiv = document.getElementById('analects-search-status');\n    if (statusDiv) {\n      const className = type === 'success' ? 'analects-success' : \n                      type === 'error' ? 'analects-error' : 'analects-info';\n      statusDiv.innerHTML = `<div class=\"${className}\">${message}</div>`;\n      if (duration > 0) {\n        setTimeout(() => statusDiv.innerHTML = '', duration);\n      }\n    }\n  }\n\n  // 测试连接方法\n  async testConnection() {\n    try {\n      const data = await this.apiRequest('characters', { limit: '1' });\n      return {\n        success: true,\n        message: '连接测试成功',\n        sampleData: data\n      };\n    } catch (error) {\n      console.error('连接测试失败:', error);\n      return {\n        success: false,\n        message: error.message,\n        error: error\n      };\n    }\n  }\n}\n\n// 全局复制方法\nif (typeof window !== 'undefined') {\n  window.AnalectsSDK = AnalectsSDK;\n  \n  window.AnalectsSDK.copyText = async function(text, button) {\n    const originalTitle = button.title;\n    try {\n      if (navigator.clipboard) {\n        await navigator.clipboard.writeText(text);\n      } else {\n        const textArea = document.createElement('textarea');\n        textArea.value = text;\n        Object.assign(textArea.style, {\n          position: 'fixed',\n          left: '-999999px',\n          top: '-999999px'\n        });\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        const successful = document.execCommand('copy');\n        document.body.removeChild(textArea);\n        if (!successful) throw new Error('Copy command failed');\n      }\n      \n      button.title = '已复制！';\n      setTimeout(() => button.title = originalTitle, 2000);\n    } catch (err) {\n      console.error('复制失败:', err);\n      button.title = '复制失败';\n      setTimeout(() => button.title = originalTitle, 2000);\n    }\n  };\n  \n  window.initAnalects = (config) => new AnalectsSDK(config);\n}\n\n// 自动初始化\nif (typeof document !== 'undefined') {\n  document.addEventListener('DOMContentLoaded', () => {\n    const autoInit = document.querySelector('[data-analects-auto-init]');\n    if (!autoInit) return;\n    \n    const supabaseUrl = autoInit.getAttribute('data-supabase-url');\n    const supabaseKey = autoInit.getAttribute('data-supabase-key');\n    \n    if (supabaseUrl && supabaseKey) {\n      const config = { supabaseUrl, supabaseKey };\n      const sdk = new AnalectsSDK(config);\n      \n      document.querySelectorAll('[data-analects-search]')\n        .forEach(container => sdk.renderSearchInterface(container));\n      \n      document.querySelectorAll('[data-analects-daily]')\n        .forEach(container => sdk.renderDailyAnalect(container));\n    }\n  });\n}\n\n// 模块导出\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = AnalectsSDK;\n}\n\nexport default AnalectsSDK;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.hmd = function(module) {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: function() {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(954);\n"],"names":["root","factory","exports","module","define","amd","self","this","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_invoke","enumerable","configurable","writable","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_objectWithoutProperties","hasOwnProperty","indexOf","_objectWithoutPropertiesLoose","propertyIsEnumerable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","_next","_throw","_defineProperties","key","_typeof","toPrimitive","String","Number","_toPrimitive","AnalectsSDK","config","undefined","_classCallCheck","supabaseUrl","supabaseKey","apiBaseUrl","concat","headers","cache","characters","proverbs","chapters","selectedItems","Map","chapter","id","name","pagination","pageSize","currentPage","totalLoaded","isLoading","hasMore","totalCount","loadedIds","Set","currentFilters","isSearchInitialized","scrollListener","isAutoLoadingEnabled","searchConditionsChanged","includes","Error","_apiRequest","_callee","endpoint","params","count","urlParams","url","existingPrefer","response","data","contentRange","match","_args","_context","validateConfig","_excluded","URLSearchParams","toString","fetch","method","mode","ok","text","status","statusText","json","get","parseInt","_x","_fetchAnalects","_callee2","filters","page","uniqueData","totalLoadedSoFar","_args2","_context2","buildQueryParams","apiRequest","removeDuplicates","getTotalCount","total","select","order","limit","offset","trim","characterIds","character_ids","join","argumentIds","argument_ids","proverbIds","proverb_ids","keyword","keywords","replace","split","k","keywordGroups","map","kw","searchFields","and","_this","escapeHtml","escapedText","escapedKeyword","regex","RegExp","escapeRegExp","div","document","createElement","textContent","innerHTML","string","_step","seenIds","_iterator","_createForOfIteratorHelper","s","entry","has","add","err","_getTotalCount","_callee3","rawKeyword","result","_context3","_x2","items","field","sort","b","textA","textB","localeCompare","numeric","sensitivity","_this2","getChapterNumber","chapterName","numStr","test","chineseToNumber","chineseNum","chineseNumbers","temp","startsWith","substring","num","_getData","_callee4","type","endpoints","uniqueChapters","sortField","_t3","_context4","fromEntries","_toConsumableArray","item","sortChaptersByNumber","sortByPinyin","message","_x3","_getCharacters","_callee5","_context5","getData","_getArguments","_callee6","_context6","_getProverbs","_callee7","_context7","_getChapters","_callee8","_context8","_getDailyAnalect","_callee9","randomIndex","_context9","Math","floor","random","_advancedSearch","_callee0","_args0","_context0","fetchAnalects","date","Date","year","getFullYear","month","getMonth","day","getDate","weekday","getDay","full","iso","toISOString","currentUrl","window","location","href","original_text","twitter","encodeURIComponent","facebook","copy","email","_copyToClipboard","_callee1","textArea","successful","_context1","navigator","clipboard","writeText","assign","style","position","left","top","body","appendChild","focus","execCommand","removeChild","_x4","container","card","className","generateResultCardHTML","setTimeout","classList","_this$currentFilters","_this3","currentKeyword","getRelatedData","_item$field","_item$field2","_item$field3","title","content","Boolean","entry_characters","argumentsList","entry_arguments","entry_proverbs","createTagGroup","label","highlightedOriginal","highlightKeywords","highlightedTranslation","translation","highlightedAnnotation","annotation","section_number","getSearchInterfaceHTML","initializeSearchEvents","loadSearchOptions","initializeScrollFeatures","createSearchSection","wrapperStyle","character","argument","proverb","_this4","getDailyAnalect","dateInfo","formatDate","shareLinks","generateShareLinks","getDailyAnalectHTML","catch","error","createShareButton","popup","icons","popupHandler","_this5","eventMap","performSearch","resetSearch","entries","_ref","_ref2","_slicedToArray","handler","element","getElementById","addEventListener","keywordInput","markSearchConditionsChanged","searchInput","filterOptions","target","searchBtn","scrollToTopBtn","scrollTo","behavior","toggle","scrollY","setupAutoLoad","_this6","removeEventListener","resultsContainer","getBoundingClientRect","bottom","innerHeight","loadMoreResults","passive","_loadSearchOptions","_callee10","statusDiv","_yield$Promise$all","_yield$Promise$all2","searchData","_t6","_this7","_context10","all","getCharacters","getArguments","getProverbs","getChapters","_ref3","_ref4","updateSearchCount","renderSearchOptions","showSearchLoadError","countElement","containerId","options","_this8","Array","isArray","tagCloud","setAttribute","allTag","createOptionTag","option","tag","_this9","isSelected","toLowerCase","preventDefault","stopPropagation","handleOptionClick","checkbox","querySelector","closest","querySelectorAll","cb","checked","remove","wasChecked","addSelectedItem","removeSelectedItem","renderSelectedItems","set","delete","_this0","selectedContainer","tagsContainer","size","display","createSelectedTag","slice","_this1","removeSelectedItemById","allCheckbox","currentCheckbox","searchTerm","tags","term","visibleCount","getAttribute","shouldShow","_performSearch","_callee11","_document$getElementB","_this$selectedItems$c","_this$selectedItems$c2","loadCompleteDiv","loadingMoreDiv","selectedCharacters","selectedArguments","selectedProverbs","selectedChapter","_t7","_context11","from","resetPagination","handleFirstSearchResult","handleSearchError","_handleFirstSearchResult","_callee12","uniqueResults","_this10","_context12","index","renderAnalectCard","_x5","_x6","_x7","clear","_loadMoreResults","_callee13","_this11","_context13","updateScrollStatus","displayedCount","_this12","input","checkboxes","showStatusMessage","duration","_testConnection","_callee14","_t9","_context14","success","sampleData","copyText","_ref5","_callee15","button","originalTitle","_context15","_x8","_x9","initAnalects","autoInit","sdk","renderSearchInterface","renderDailyAnalect","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","hmd","children","__webpack_exports__"],"sourceRoot":""}