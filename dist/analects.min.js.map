{"version":3,"file":"analects.min.js","mappings":"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","sources":["webpack://AnalectsSDK/webpack/universalModuleDefinition","webpack://AnalectsSDK/webpack/bootstrap","webpack://AnalectsSDK/webpack/runtime/define property getters","webpack://AnalectsSDK/webpack/runtime/hasOwnProperty shorthand","webpack://AnalectsSDK/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AnalectsSDK\"] = factory();\n\telse\n\t\troot[\"AnalectsSDK\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// 引入样式（由 webpack 处理）\nimport './styles/analects.css';\n\n/**\n * AnalectsSDK - 干净可用的最小实现\n * 满足：\n * 1) 章节筛选为单选、隐藏圆圈\n * 2) 默认“全部章节”为选中；选中其它章节时，“全部章节”变为白底\n * 3) 切换章节/筛选时重置分页，杜绝重复或串章数据\n * 4) 初始不自动搜索，只有点击“搜索”后才触发；滚动加载仅在有过搜索后启用\n * 5) 状态条显示“共找到X条结果，滚动或点击加载更多”；全部加载后显示“已加载完毕”\n *\n * 说明：\n * - 通过 Supabase PostgREST 访问：/rest/v1\n * - 服务端过滤：关键词（or=ilike*）、章节（eq），分页（limit/offset）\n * - 关联过滤（人物/论点/谚语）在客户端完成 AND 语义（通过嵌套选择返回的 id 列表判断）\n * - 结果总数通过 Prefer: count=exact + Content-Range 读取\n */\nexport default class AnalectsSDK {\n  constructor(config = {}) {\n    this.supabaseUrl = config.supabaseUrl || '';\n    this.supabaseKey = config.supabaseKey || '';\n    this.apiBaseUrl = this.supabaseUrl ? `${this.supabaseUrl}/rest/v1` : '';\n\n    this.headers = {\n      'apikey': this.supabaseKey,\n      'Authorization': `Bearer ${this.supabaseKey}`,\n      'Content-Type': 'application/json',\n      // 关键：用于拿到 Content-Range 统计总数\n      'Prefer': 'return=representation,count=exact'\n    };\n\n    // 搜索/分页状态\n    this.state = {\n      didSearch: false,\n      page: 0,\n      pageSize: 10,\n      hasMore: false,\n      totalCount: 0,\n      isLoading: false,\n      currentFilters: null,\n      searchToken: 0\n    };\n\n    // 选项缓存\n    this.cache = {\n      characters: null,\n      arguments: null,\n      proverbs: null,\n      chapters: null,\n    };\n\n    // 选中项\n    this.selected = {\n      chapter: { id: 'all', name: '全部章节' },\n      characters: new Map(), // id -> name\n      arguments: new Map(),\n      proverbs: new Map(),\n    };\n  }\n\n  // ---------- 基础请求 ----------\n  async _fetch(url) {\n    if (!this.supabaseUrl || !this.supabaseKey) {\n      throw new Error('Supabase 配置无效：请在初始化时传入 supabaseUrl 与 supabaseKey');\n    }\n    const res = await fetch(url, { headers: this.headers });\n    if (!res.ok) {\n      const text = await res.text().catch(() => '');\n      throw new Error(`请求失败 ${res.status}: ${text || res.statusText}`);\n    }\n    const contentRange = res.headers.get('content-range');\n    const total = contentRange && contentRange.includes('/') ? parseInt(contentRange.split('/').pop(), 10) : null;\n    const data = await res.json();\n    return { data, total };\n  }\n\n  // ---------- 选项获取（一次性加载并缓存） ----------\n  async _getOptions(endpoint, pick = (r) => ({ id: r.id, name: r.name || r.title || r.content })) {\n    if (this.cache[endpoint]) return this.cache[endpoint];\n    const url = `${this.apiBaseUrl}/${endpoint}?select=id,name,title,content&order=id.asc&limit=1000`;\n    const { data } = await this._fetch(url);\n    const cleaned = (Array.isArray(data) ? data : []).map(pick).filter(x => x && x.id != null);\n    this.cache[endpoint] = cleaned;\n    return cleaned;\n  }\n  getCharacters() { return this._getOptions('characters'); }\n  getArguments()  { return this._getOptions('arguments'); }\n  getProverbs()   { return this._getOptions('proverbs'); }\n  async getChapters() {\n    if (this.cache.chapters) return this.cache.chapters;\n    // 直接从 analects_entries 聚合章节\n    const url = `${this.apiBaseUrl}/analects_entries?select=chapter&order=chapter.asc&limit=10000`;\n    const { data } = await this._fetch(url);\n    const set = new Set();\n    (data || []).forEach(r => { if (r && r.chapter != null) set.add(String(r.chapter)); });\n    const chapters = Array.from(set).map((c, i) => ({ id: c, name: c }));\n    this.cache.chapters = chapters;\n    return chapters;\n  }\n\n  // ---------- 数据查询 ----------\n  _buildEntriesUrl(filters, page, pageSize) {\n    const select =\n      'id,chapter,section_number,original_text,translation,annotation,' +\n      'entry_characters(character_id),' +\n      'entry_arguments(argument_id),' +\n      'entry_proverbs(proverb_id)';\n    let url = `${this.apiBaseUrl}/analects_entries?select=${encodeURIComponent(select)}&order=id.asc`;\n\n    const conds = [];\n\n    // 关键词（服务端粗过滤）\n    if (filters.keyword) {\n      const kw = filters.keyword.trim();\n      if (kw) {\n        const encoded = encodeURIComponent(`(original_text.ilike.*${kw}*,translation.ilike.*${kw}*,annotation.ilike.*${kw}*)`);\n        conds.push(`or=${encoded}`);\n      }\n    }\n\n    // 章节（服务端）\n    if (filters.chapter && filters.chapter !== 'all') {\n      conds.push(`chapter=eq.${encodeURIComponent(filters.chapter)}`);\n    }\n\n    // 分页\n    conds.push(`limit=${pageSize}`);\n    conds.push(`offset=${page * pageSize}`);\n\n    if (conds.length) url += '&' + conds.join('&');\n    return url;\n  }\n\n  async fetchEntries(filters, page = 0, pageSize = 10) {\n    const url = this._buildEntriesUrl(filters, page, pageSize);\n    const { data, total } = await this._fetch(url);\n    // 客户端 AND 过滤（人物/论点/谚语）\n    let list = Array.isArray(data) ? data : [];\n\n    const allIn = (selectedIds, entryIds) =>\n      [...selectedIds].every(id => entryIds.includes(parseInt(id, 10)));\n\n    if (filters.characterIds && filters.characterIds.length) {\n      list = list.filter(e => {\n        const ids = (e.entry_characters || []).map(x => x.character_id).filter(x => x != null);\n        return allIn(filters.characterIds, ids);\n      });\n    }\n    if (filters.argumentIds && filters.argumentIds.length) {\n      list = list.filter(e => {\n        const ids = (e.entry_arguments || []).map(x => x.argument_id).filter(x => x != null);\n        return allIn(filters.argumentIds, ids);\n      });\n    }\n    if (filters.proverbIds && filters.proverbIds.length) {\n      list = list.filter(e => {\n        const ids = (e.entry_proverbs || []).map(x => x.proverb_id).filter(x => x != null);\n        return allIn(filters.proverbIds, ids);\n      });\n    }\n\n    // 关键词二次过滤（保证与服务端一致）\n    if (filters.keyword) {\n      const kw = filters.keyword.trim().toLowerCase();\n      list = list.filter(e => {\n        const t1 = (e.original_text || '').toLowerCase();\n        const t2 = (e.translation || '').toLowerCase();\n        const t3 = (e.annotation || '').toLowerCase();\n        return t1.includes(kw) || t2.includes(kw) || t3.includes(kw);\n      });\n    }\n\n    return {\n      data: list,\n      // 注意：total 为服务端（仅关键词+章节）统计值，这里用它作为基数；\n      // 客户端 AND 过滤后数量可能更少，因此我们以 list.length 是否等于 pageSize 判断是否“可能还有更多”\n      totalCount: typeof total === 'number' ? total : list.length,\n      hasMore: list.length === pageSize\n    };\n  }\n\n  // ---------- 每日论语 ----------\n  async renderDailyAnalect(container) {\n    if (!container) return;\n    container.innerHTML = `<div class=\"analects-card\"><div class=\"analects-loading\">加载每日论语...</div></div>`;\n\n    try {\n      // 获取总数\n      const countUrl = `${this.apiBaseUrl}/analects_entries?select=id`;\n      const { total } = await this._fetch(countUrl);\n      const totalCount = typeof total === 'number' ? total : 0;\n      if (!totalCount) {\n        container.innerHTML = `<div class=\"analects-error\">暂无数据</div>`;\n        return;\n      }\n\n      // 用日期（UTC）决定 offset\n      const today = new Date();\n      const dayIndex = Math.floor((Date.UTC(today.getFullYear(), today.getMonth(), today.getDate()) / 86400000)) % totalCount;\n\n      const url = `${this.apiBaseUrl}/analects_entries?select=id,chapter,section_number,original_text,translation,annotation&order=id.asc&limit=1&offset=${dayIndex}`;\n      const { data } = await this._fetch(url);\n      const item = (data || [])[0];\n\n      if (!item) {\n        container.innerHTML = `<div class=\"analects-error\">未找到每日论语</div>`;\n        return;\n      }\n\n      container.innerHTML = `\n        <div class=\"analects-card\">\n          <div class=\"analects-card-header\">\n            <h3 class=\"analects-card-title\">📜 每日论语</h3>\n            <div class=\"analects-card-subtitle\">${this._fmtChapter(item)}</div>\n          </div>\n          <div class=\"analects-card-body\">\n            <div class=\"analects-text\">${this._safe(item.original_text)}</div>\n            ${item.translation ? `<div class=\"analects-subtext\">${this._safe(item.translation)}</div>` : ''}\n            ${item.annotation ? `<div class=\"analects-subtext muted\">${this._safe(item.annotation)}</div>` : ''}\n          </div>\n        </div>\n      `;\n    } catch (err) {\n      container.innerHTML = `<div class=\"analects-error\">加载失败：${err.message}</div>`;\n    }\n  }\n\n  _fmtChapter(e) {\n    const ch = e.chapter != null ? String(e.chapter) : '';\n    const sec = e.section_number != null ? String(e.section_number) : '';\n    if (ch && sec) return `第 ${ch} 篇 · 第 ${sec} 章`;\n    if (ch) return `第 ${ch} 篇`;\n    return '';\n  }\n\n  _safe(t) {\n    return (t || '').replace(/[&<>]/g, s => ({'&':'&amp;','<':'&lt;','>':'&gt;'}[s]));\n  }\n\n  // ---------- 搜索界面 ----------\n  async renderSearchInterface(container) {\n    if (!container) return;\n    container.innerHTML = this._searchSkeleton();\n\n    // 绑定元素\n    const keywordInput = container.querySelector('#analects-keyword');\n    const searchBtn = container.querySelector('#analects-search-btn');\n    const results = container.querySelector('#analects-results');\n    const statusBar = container.querySelector('#analects-status');\n    const loadMoreBtn = container.querySelector('#analects-load-more-btn');\n    const chapterCloud = container.querySelector('#chapter-filters');\n    const charCloud = container.querySelector('#character-filters');\n    const argCloud = container.querySelector('#argument-filters');\n    const provCloud = container.querySelector('#proverb-filters');\n\n    // 初始状态：不搜索\n    statusBar.textContent = '请输入关键词或选择筛选后点击“搜索”。';\n\n    // 渲染筛选选项\n    const [chapters, characters, argumentsList, proverbs] = await Promise.all([\n      this.getChapters(), this.getCharacters(), this.getArguments(), this.getProverbs()\n    ]);\n\n    // 章节（单选 + “全部章节”）\n    this._renderChapterChips(chapterCloud, chapters);\n\n    // 其余为多选\n    this._renderMultiChips(charCloud, characters, this.selected.characters);\n    this._renderMultiChips(argCloud, argumentsList, this.selected.arguments);\n    this._renderMultiChips(provCloud, proverbs, this.selected.proverbs);\n\n    // 点击搜索\n    searchBtn.addEventListener('click', async () => {\n      await this._startSearch({\n        keyword: (keywordInput.value || '').trim(),\n        characterIds: Array.from(this.selected.characters.keys()),\n        argumentIds: Array.from(this.selected.arguments.keys()),\n        proverbIds: Array.from(this.selected.proverbs.keys()),\n        chapter: this.selected.chapter?.id || 'all'\n      }, { results, statusBar, loadMoreBtn });\n    });\n\n    // 加载更多（点击）\n    loadMoreBtn.addEventListener('click', async () => {\n      await this._loadMore({ results, statusBar, loadMoreBtn });\n    });\n\n    // 滚动加载（仅在已搜索后生效）\n    const onScroll = async () => {\n      if (!this.state.didSearch || this.state.isLoading || !this.state.hasMore) return;\n      const rect = loadMoreBtn.getBoundingClientRect();\n      // 当按钮接近视口底部时触发\n      if (rect.top < window.innerHeight + 120) {\n        await this._loadMore({ results, statusBar, loadMoreBtn });\n      }\n    };\n    window.addEventListener('scroll', onScroll);\n  }\n\n  _searchSkeleton() {\n    return `\n      <div class=\"analects-card\">\n        <div class=\"analects-card-header\">\n          <h3 class=\"analects-card-title\">🔎 论语查询</h3>\n          <div class=\"analects-searchbar\">\n            <input id=\"analects-keyword\" class=\"analects-input\" placeholder=\"输入关键词（原文/译文/注释）\">\n            <button id=\"analects-search-btn\" class=\"analects-btn primary\">搜索</button>\n          </div>\n        </div>\n        <div class=\"analects-card-body\">\n          <div class=\"analects-filters\">\n            <div class=\"analects-filter\">\n              <div class=\"analects-filter-title\">章节</div>\n              <div id=\"chapter-filters\" class=\"analects-tag-cloud\"></div>\n            </div>\n            <div class=\"analects-filter\">\n              <div class=\"analects-filter-title\">人物</div>\n              <div id=\"character-filters\" class=\"analects-tag-cloud\"></div>\n            </div>\n            <div class=\"analects-filter\">\n              <div class=\"analects-filter-title\">论点</div>\n              <div id=\"argument-filters\" class=\"analects-tag-cloud\"></div>\n            </div>\n            <div class=\"analects-filter\">\n              <div class=\"analects-filter-title\">谚语</div>\n              <div id=\"proverb-filters\" class=\"analects-tag-cloud\"></div>\n            </div>\n          </div>\n          <div id=\"analects-status\" class=\"analects-status muted\"></div>\n          <div id=\"analects-results\" class=\"analects-results\"></div>\n          <div class=\"analects-loadmore\">\n            <button id=\"analects-load-more-btn\" class=\"analects-btn\">加载更多</button>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  _renderChapterChips(container, chapters) {\n    container.innerHTML = '';\n    // “全部章节”\n    const all = this._chip({ id: 'all', name: '全部章节' }, true, true);\n    container.appendChild(all);\n\n    const setSelected = (chip) => {\n      // 清空所有章节选中\n      container.querySelectorAll('.analects-chip').forEach(el => el.classList.remove('selected'));\n      // 选中当前\n      chip.classList.add('selected');\n      // 更新 selected.chapter\n      this.selected.chapter = { id: chip.dataset.id, name: chip.dataset.name };\n      // 规则：只有在 selected 时，.all-option 才是绿色；否则为白底\n      const allChip = container.querySelector('.analects-chip.all-option');\n      if (allChip) {\n        if (chip === allChip) allChip.classList.add('selected');\n        else allChip.classList.remove('selected');\n      }\n      // 切换筛选时：重置分页与搜索状态，但不触发自动搜索（用户需点“搜索”）\n      this._resetPaging();\n    };\n\n    all.addEventListener('click', () => setSelected(all));\n\n    (chapters || []).forEach(ch => {\n      const chip = this._chip({ id: String(ch.id), name: String(ch.name) }, false, false);\n      chip.addEventListener('click', () => setSelected(chip));\n      container.appendChild(chip);\n    });\n  }\n\n  _renderMultiChips(container, options, storeMap) {\n    container.innerHTML = '';\n    (options || []).forEach(opt => {\n      const chip = this._chip({ id: String(opt.id), name: String(opt.name || opt.title || opt.content || opt.id) }, false, false);\n      chip.addEventListener('click', () => {\n        const id = chip.dataset.id;\n        const name = chip.dataset.name;\n        if (chip.classList.contains('selected')) {\n          chip.classList.remove('selected');\n          storeMap.delete(id);\n        } else {\n          chip.classList.add('selected');\n          storeMap.set(id, name);\n        }\n        this._resetPaging();\n      });\n      container.appendChild(chip);\n    });\n  }\n\n  _chip(opt, selected, isAll) {\n    const chip = document.createElement('label');\n    chip.className = `analects-chip${isAll ? ' all-option' : ''}${selected ? ' selected' : ''}`;\n    chip.dataset.id = String(opt.id);\n    chip.dataset.name = String(opt.name);\n    // 隐藏的单选/复选输入（供无障碍/键盘使用；样式上隐藏小圆圈/方框）\n    chip.innerHTML = `\n      <input type=\"${isAll ? 'radio' : 'checkbox'}\" ${selected ? 'checked' : ''} aria-hidden=\"true\" tabindex=\"-1\">\n      <span>${this._safe(opt.name)}</span>\n    `;\n    return chip;\n  }\n\n  _resetPaging() {\n    this.state.page = 0;\n    this.state.hasMore = false;\n    this.state.totalCount = 0;\n    this.state.didSearch = false; // 防止未点击“搜索”时触发滚动加载\n  }\n\n  async _startSearch(filters, ctx) {\n    // 记录本次搜索 token，避免旧结果插队\n    const token = ++this.state.searchToken;\n    this.state.isLoading = true;\n    this.state.page = 0;\n    this.state.didSearch = true;\n    this.state.currentFilters = { ...filters };\n\n    ctx.statusBar.textContent = '🔍 搜索中...';\n    ctx.results.innerHTML = '<div class=\"analects-loading\">正在搜索...</div>';\n    ctx.loadMoreBtn.disabled = true;\n\n    try {\n      const { data, totalCount, hasMore } = await this.fetchEntries(this.state.currentFilters, 0, this.state.pageSize);\n      if (token !== this.state.searchToken) return; // 已有新搜索触发\n\n      this.state.page = 1;\n      this.state.hasMore = hasMore;\n      this.state.totalCount = totalCount || data.length;\n\n      ctx.results.innerHTML = '';\n      this._renderList(ctx.results, data);\n\n      if (this.state.hasMore) {\n        ctx.statusBar.textContent = `共找到 ${this.state.totalCount} 条结果，滚动或者点击加载更多`;\n      } else {\n        ctx.statusBar.textContent = data.length > 0\n          ? '已加载完毕'\n          : '未找到匹配的结果';\n      }\n\n      ctx.loadMoreBtn.disabled = !this.state.hasMore;\n    } catch (err) {\n      ctx.results.innerHTML = `<div class=\"analects-error\">搜索失败：${err.message}</div>`;\n      ctx.statusBar.textContent = '搜索失败';\n    } finally {\n      this.state.isLoading = false;\n    }\n  }\n\n  async _loadMore(ctx) {\n    if (!this.state.didSearch || this.state.isLoading || !this.state.hasMore) return;\n    const token = this.state.searchToken;\n    this.state.isLoading = true;\n    ctx.loadMoreBtn.disabled = true;\n    ctx.loadMoreBtn.textContent = '加载中...';\n\n    try {\n      const { data, hasMore } = await this.fetchEntries(this.state.currentFilters, this.state.page, this.state.pageSize);\n      if (token !== this.state.searchToken) return;\n      this.state.page += 1;\n      this.state.hasMore = hasMore;\n      this._renderList(ctx.results, data);\n\n      if (this.state.hasMore) {\n        ctx.statusBar.textContent = `共找到 ${this.state.totalCount} 条结果，滚动或者点击加载更多`;\n        ctx.loadMoreBtn.disabled = false;\n        ctx.loadMoreBtn.textContent = '加载更多';\n      } else {\n        ctx.statusBar.textContent = '已加载完毕';\n        ctx.loadMoreBtn.textContent = '已加载完毕';\n      }\n    } catch (err) {\n      // 保持体验\n      ctx.statusBar.textContent = `加载更多失败：${err.message}`;\n      ctx.loadMoreBtn.disabled = false;\n      ctx.loadMoreBtn.textContent = '加载更多';\n    } finally {\n      this.state.isLoading = false;\n    }\n  }\n\n  _renderList(container, items) {\n    const frag = document.createDocumentFragment();\n    (items || []).forEach(e => {\n      const card = document.createElement('div');\n      card.className = 'analects-item';\n      card.innerHTML = `\n        <div class=\"meta\">${this._fmtChapter(e)}</div>\n        <div class=\"text\">${this._safe(e.original_text)}</div>\n        ${e.translation ? `<div class=\"subtext\">${this._safe(e.translation)}</div>` : ''}\n        ${e.annotation ? `<div class=\"subtext muted\">${this._safe(e.annotation)}</div>` : ''}\n      `;\n      frag.appendChild(card);\n    });\n    container.appendChild(frag);\n  }\n}"],"names":["root","factory","exports","module","define","amd","self","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","e","t","r","Symbol","n","iterator","toStringTag","i","c","Generator","u","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","_invoke","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","_typeof","toPrimitive","String","Number","_toPrimitive","AnalectsSDK","config","undefined","_classCallCheck","supabaseUrl","supabaseKey","apiBaseUrl","concat","headers","state","didSearch","page","pageSize","hasMore","totalCount","isLoading","currentFilters","searchToken","cache","characters","proverbs","chapters","selected","chapter","id","name","Map","_fetch2","_callee","url","res","text","contentRange","total","data","_context","Error","fetch","ok","catch","status","statusText","includes","parseInt","split","pop","json","_x","_getOptions2","_callee2","endpoint","pick","_yield$this$_fetch","cleaned","_args2","_context2","title","content","_fetch","Array","isArray","map","filter","x","_x2","_getOptions","_getChapters","_callee3","_yield$this$_fetch2","set","_context3","Set","forEach","add","from","filters","encodeURIComponent","conds","keyword","kw","trim","encoded","push","join","_fetchEntries","_callee4","_yield$this$_fetch3","list","allIn","_args4","_context4","_buildEntriesUrl","selectedIds","entryIds","_toConsumableArray","every","characterIds","ids","entry_characters","character_id","argumentIds","entry_arguments","argument_id","proverbIds","entry_proverbs","proverb_id","toLowerCase","t1","original_text","t2","translation","t3","annotation","_x3","_renderDailyAnalect","_callee5","container","countUrl","_yield$this$_fetch4","today","dayIndex","_yield$this$_fetch5","item","_t","_context5","innerHTML","Date","Math","floor","UTC","getFullYear","getMonth","getDate","_fmtChapter","_safe","message","_x4","ch","sec","section_number","replace","s","_renderSearchInterface","_callee9","keywordInput","searchBtn","results","statusBar","loadMoreBtn","chapterCloud","charCloud","argCloud","provCloud","_yield$Promise$all","_yield$Promise$all2","argumentsList","onScroll","_this","_context9","_searchSkeleton","querySelector","textContent","all","getChapters","getCharacters","getArguments","getProverbs","_slicedToArray","_renderChapterChips","_renderMultiChips","addEventListener","_callee6","_this$selected$chapte","_context6","_startSearch","keys","_callee7","_context7","_loadMore","_ref3","_callee8","_context8","getBoundingClientRect","top","window","innerHeight","_x5","_this2","_chip","appendChild","setSelected","chip","querySelectorAll","el","classList","remove","dataset","allChip","_resetPaging","options","storeMap","_this3","opt","contains","delete","isAll","document","createElement","className","_startSearch2","_callee0","ctx","token","_yield$this$fetchEntr","_t2","_context0","_objectSpread","disabled","fetchEntries","_renderList","_x6","_x7","_loadMore2","_callee1","_yield$this$fetchEntr2","_t3","_context1","_x8","items","_this4","frag","createDocumentFragment","card"],"sourceRoot":""}